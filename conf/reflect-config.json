[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[Lcom.fasterxml.jackson.annotation.JsonSubTypes$Type;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.JsonSerializer;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.annotation.JsonAppend$Attr;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.annotation.JsonAppend$Prop;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lio.netty.util.concurrent.FastThreadLocal;"
},
{
  "name":"[Lio.swagger.annotations.Extension;"
},
{
  "name":"[Lio.swagger.annotations.ExtensionProperty;"
},
{
  "name":"[Ljava.lang.Class;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.annotation.Annotation;"
},
{
  "name":"[Ljava.lang.annotation.ElementType;"
},
{
  "name":"[Ljava.lang.invoke.LambdaForm$Name;"
},
{
  "name":"[Ljava.lang.invoke.LambdaFormEditor$Transform;"
},
{
  "name":"[Ljava.lang.reflect.Field;"
},
{
  "name":"[Ljava.math.BigDecimal;"
},
{
  "name":"[Ljava.util.Locale;"
},
{
  "name":"[Ljava.util.Map$Entry;"
},
{
  "name":"[Ljava.util.logging.Handler;"
},
{
  "name":"[Ljavax.ws.rs.core.MediaType;"
},
{
  "name":"[Lorg.gradle.internal.service.ServiceRegistry;"
},
{
  "name":"[Lorg.mockserver.model.NottableString;"
},
{
  "name":"[Lorg.mockserver.serialization.model.ExpectationDTO;"
},
{
  "name":"[Lsun.security.jca.ProviderConfig;"
},
{
  "name":"[Lsun.security.pkcs.SignerInfo;"
},
{
  "name":"apple.security.AppleProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"byte[]"
},
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.OutputStreamAppender",
  "methods":[{"name":"setEncoder","parameterTypes":["ch.qos.logback.core.encoder.Encoder"] }]
},
{
  "name":"ch.qos.logback.core.encoder.Encoder",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.encoder.LayoutWrappingEncoder",
  "methods":[{"name":"setParent","parameterTypes":["ch.qos.logback.core.spi.ContextAware"] }]
},
{
  "name":"ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
  "methods":[{"name":"setPattern","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.spi.ContextAware",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"char[]"
},
{
  "name":"com.aayushatharva.brotli4j.Brotli4jLoader"
},
{
  "name":"com.fasterxml.jackson.annotation.JacksonAnnotation",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonAlias",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonCreator",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonCreator$Mode",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonIgnore",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude$Include",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonProperty",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonProperty$Access",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonPropertyOrder",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonSubTypes",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonSubTypes$Type",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonTypeInfo",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonTypeInfo$As",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonTypeInfo$Id",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonValue",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.Versioned"
},
{
  "name":"com.fasterxml.jackson.core.type.TypeReference"
},
{
  "name":"com.fasterxml.jackson.databind.DeserializationFeature",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.JsonNode"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper"
},
{
  "name":"com.fasterxml.jackson.databind.SerializationFeature",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.annotation.JacksonStdImpl",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.databind.annotation.JsonAppend",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.databind.annotation.JsonAppend$Attr",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"com.fasterxml.jackson.databind.deser.Deserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.KeyDeserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiators[]"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.node.ArrayNode"
},
{
  "name":"com.fasterxml.jackson.databind.node.BaseJsonNode"
},
{
  "name":"com.fasterxml.jackson.databind.node.ContainerNode"
},
{
  "name":"com.fasterxml.jackson.databind.node.JsonNodeCreator"
},
{
  "name":"com.fasterxml.jackson.databind.node.ObjectNode"
},
{
  "name":"com.fasterxml.jackson.databind.ser.BeanSerializerModifier[]"
},
{
  "name":"com.fasterxml.jackson.databind.ser.Serializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.ser.std.FileSerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.errorprone.annotations.Keep"
},
{
  "name":"com.google.gson.Gson"
},
{
  "name":"com.lmax.disruptor.AbstractSequencer",
  "fields":[{"name":"gatingSequences"}]
},
{
  "name":"com.lmax.disruptor.Value",
  "fields":[{"name":"value"}]
},
{
  "name":"com.networknt.schema.AdditionalPropertiesValidator",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","com.fasterxml.jackson.databind.JsonNode","com.networknt.schema.JsonSchema","com.networknt.schema.ValidationContext"] }]
},
{
  "name":"com.networknt.schema.AnyOfValidator",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","com.fasterxml.jackson.databind.JsonNode","com.networknt.schema.JsonSchema","com.networknt.schema.ValidationContext"] }]
},
{
  "name":"com.networknt.schema.EnumValidator",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","com.fasterxml.jackson.databind.JsonNode","com.networknt.schema.JsonSchema","com.networknt.schema.ValidationContext"] }]
},
{
  "name":"com.networknt.schema.ItemsValidator",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","com.fasterxml.jackson.databind.JsonNode","com.networknt.schema.JsonSchema","com.networknt.schema.ValidationContext"] }]
},
{
  "name":"com.networknt.schema.OneOfValidator",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","com.fasterxml.jackson.databind.JsonNode","com.networknt.schema.JsonSchema","com.networknt.schema.ValidationContext"] }]
},
{
  "name":"com.networknt.schema.PatternPropertiesValidator",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","com.fasterxml.jackson.databind.JsonNode","com.networknt.schema.JsonSchema","com.networknt.schema.ValidationContext"] }]
},
{
  "name":"com.networknt.schema.PropertiesValidator",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","com.fasterxml.jackson.databind.JsonNode","com.networknt.schema.JsonSchema","com.networknt.schema.ValidationContext"] }]
},
{
  "name":"com.networknt.schema.RefValidator",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","com.fasterxml.jackson.databind.JsonNode","com.networknt.schema.JsonSchema","com.networknt.schema.ValidationContext"] }]
},
{
  "name":"com.networknt.schema.RequiredValidator",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","com.fasterxml.jackson.databind.JsonNode","com.networknt.schema.JsonSchema","com.networknt.schema.ValidationContext"] }]
},
{
  "name":"com.networknt.schema.SpecVersion$VersionFlag",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"com.networknt.schema.TypeValidator",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","com.fasterxml.jackson.databind.JsonNode","com.networknt.schema.JsonSchema","com.networknt.schema.ValidationContext"] }]
},
{
  "name":"com.squareup.moshi.Moshi"
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DHParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.HmacCore$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsKeyMaterialGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsPrfGenerator$V12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jndi.url.java.javaURLContextFactory"
},
{
  "name":"com.sun.management.internal.PlatformMBeanProviderImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.security.sasl.Provider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.security.sasl.gsskerb.JdkSASL",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"groovy.lang.Binding"
},
{
  "name":"groovy.lang.Closure"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.channel.AbstractChannelHandlerContext",
  "fields":[{"name":"handlerState"}]
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.channel.ChannelHandler$Sharable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelHandlerMask$Skip",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[{"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelOutboundBuffer",
  "fields":[{"name":"totalPendingSize"}, {"name":"unwritable"}]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.channel.CombinedChannelDuplexHandler",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.channel.DefaultChannelConfig",
  "fields":[{"name":"autoRead"}, {"name":"writeBufferWaterMark"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline",
  "fields":[{"name":"estimatorHandle"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.SimpleChannelInboundHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.socket.nio.NioServerSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.channel.socket.nio.NioSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.handler.codec.ByteToMessageDecoder",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.MessageAggregator",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageDecoder",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.http.DefaultHttpMessage"
},
{
  "name":"io.netty.handler.codec.http.FullHttpMessage"
},
{
  "name":"io.netty.handler.codec.http.FullHttpRequest"
},
{
  "name":"io.netty.handler.codec.http.FullHttpResponse"
},
{
  "name":"io.netty.handler.codec.http.HttpClientCodec"
},
{
  "name":"io.netty.handler.codec.http.HttpContent"
},
{
  "name":"io.netty.handler.codec.http.HttpContentDecoder",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpContentDecompressor"
},
{
  "name":"io.netty.handler.codec.http.HttpMessage"
},
{
  "name":"io.netty.handler.codec.http.HttpObject"
},
{
  "name":"io.netty.handler.codec.http.HttpObjectAggregator"
},
{
  "name":"io.netty.handler.codec.http.HttpServerCodec"
},
{
  "name":"io.netty.util.DefaultAttributeMap",
  "fields":[{"name":"attributes"}]
},
{
  "name":"io.netty.util.DefaultAttributeMap$DefaultAttribute",
  "fields":[{"name":"attributeMap"}]
},
{
  "name":"io.netty.util.Recycler$DefaultHandle",
  "fields":[{"name":"state"}]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
  "fields":[{"name":"droppedRecords"}, {"name":"head"}]
},
{
  "name":"io.netty.util.concurrent.DefaultPromise",
  "fields":[{"name":"result"}]
},
{
  "name":"io.netty.util.concurrent.SingleThreadEventExecutor",
  "fields":[{"name":"state"}, {"name":"threadProperties"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.seqera.tower.cli.BaseCmdTest",
  "fields":[{"name":"tempDir"}]
},
{
  "name":"io.seqera.tower.cli.InfoCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testInfo","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testInfoStatusTokenFail","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testInfoStatusUrlFail","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testInfoVersionFail","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.LaunchCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testInvalidAuth","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testPipelineNotfound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testSubmitGithubPipeline","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testSubmitLaunchpadPipeline","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testSubmitLaunchpadPipelineWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testSubmitLaunchpadPipelineWithCustomName","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testSubmitLaunchpadPipelineWithLabels","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testSubmitLaunchpadPipelineWithOptimizationDisabled","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testSubmitToAWorkspace","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.Tower",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.actions.ActionsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithError","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithOverwrite","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithoutSubCommands","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testDelete","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDeleteError","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testDeleteNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListEmpty","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testPause","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testPauseAlreadyPausedItem","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testPauseError","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testUpdate","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdateInvalidName","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdateName","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdateWithError","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testView","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testViewNoActionFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testViewNoWorkspaceActionsFound","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.collaborators.CollaboratorsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testListCollaborators","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.commands.AbstractApiCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.AbstractCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.AbstractRootCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.ActionsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.CollaboratorsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.ComputeEnvsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.CredentialsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.DataLinksCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.DatasetsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.InfoCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.LaunchCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.LaunchCmd$AdvancedOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.MembersCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.OrganizationsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.ParticipantsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.PipelinesCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.RunsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.SecretsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.StudiosCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.TeamsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.WorkspacesCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.actions.AbstractActionsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.actions.ActionRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.actions.ActionRefOptions$ActionRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.actions.AddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.actions.DeleteCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.actions.LabelsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.actions.ListCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.actions.UpdateCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.actions.ViewCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.actions.add.AbstractAddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.actions.add.AddGitHubCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.actions.add.AddTowerCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.collaborators.AbstractCollaboratorsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.collaborators.ListCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.AbstractComputeEnvCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.AddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.ComputeEnvRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.ComputeEnvRefOptions$ComputeEnvRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.DeleteCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.ExportCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.ImportCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.ListCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.PrimaryCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.UpdateCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.ViewCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AbstractAddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddAltairCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddAwsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddAzureCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddEksCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddGkeCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddGoogleBatchCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddGoogleLifeSciencesCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddK8sCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddLsfCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddMoabCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddSlurmCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.AddUgeCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.aws.AddAwsForgeCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.aws.AddAwsManualCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.azure.AddAzureForgeCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.add.azure.AddAzureManualCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AbstractPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AbstractPlatform$Environment",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AbstractPlatform$StagingOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AltairPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AltairPlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchForgePlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchForgePlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchForgePlatform$EfsFileSystem",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchForgePlatform$FsxFileSystem",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchManualPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AwsBatchManualPlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AzBatchForgePlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AzBatchForgePlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AzBatchManualPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.AzBatchManualPlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.EksPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.GkePlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.GoogleBatchPlatform",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.GoogleBatchPlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.GoogleLifeSciencesPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.GoogleLifeSciencesPlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.GoogleLifeSciencesPlatform$Filestore",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.K8sPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.K8sPlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.LsfPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.LsfPlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.MoabPlatform",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.MoabPlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.SlurmPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.SlurmPlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.UnivaPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.platforms.UnivaPlatform$AdvancedOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.primary.AbstractComputeEnvsPrimaryCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.primary.GetCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.computeenvs.primary.SetCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.AbstractCredentialsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.credentials.AddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.CredentialsRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.CredentialsRefOptions$CredentialsRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.DeleteCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.ListCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.UpdateCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AbstractAddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddAgentCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddAwsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddAzureCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddBitbucketCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddCodeCommitCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddContainerRegistryCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddGiteaCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddGithubCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddGitlabCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddGoogleCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddK8sCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.add.AddSshCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.AbstractGitProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.AbstractProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.AwsProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.AwsProvider$Keys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.AzureProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.BitbucketProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.CodeCommitProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.ContainerRegistryProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.GiteaProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.GithubProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.GitlabProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.GoogleProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.K8sProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.K8sProvider$ClientCerts",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.K8sProvider$Keys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.SshProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.providers.TwAgentProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.AbstractUpdateCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.UpdateAgentCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.UpdateAwsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.UpdateAzureCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.UpdateBitbucketCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.UpdateCodeCommitCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.UpdateContainerRegistryCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.UpdateGithubCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.UpdateGitlabCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.UpdateGoogleCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.UpdateK8sCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.credentials.update.UpdateSshCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.data.links.AbstractDataLinksCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.data.links.AddCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.data.links.BrowseCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.data.links.DeleteCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.data.links.ListCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.data.links.ListCmd$Visibility",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.data.links.SearchOption",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.data.links.UpdateCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.data.studios.AbstractStudiosCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.data.studios.StudioRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.data.studios.StudioRefOptions$StudioRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.data.studios.ViewCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.datasets.AbstractDatasetsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.datasets.AddCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.datasets.DatasetRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.datasets.DatasetRefOptions$DatasetRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.datasets.DeleteCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.datasets.DownloadCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.datasets.ListCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.datasets.UpdateCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.datasets.UrlCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.datasets.ViewCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.datasets.versions.VersionsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.enums.OutputType",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.global.PaginationOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.global.PaginationOptions$Pageable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.global.PaginationOptions$Sizeable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.global.ShowLabelsOption",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.global.WorkspaceOptionalOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.global.WorkspaceRequiredOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.AbstractLabelsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.labels.AddLabelsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.DeleteLabelsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.Label"
},
{
  "name":"io.seqera.tower.cli.commands.labels.Label$LabelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.Label$ResourceLabelsConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.Label$StudioResourceLabelsConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.LabelsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.LabelsOptionalOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.LabelsSubcmdOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.LabelsSubcmdOptions$Operation",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.ListLabelsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.UpdateLabelsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.labels.UpdateLabelsCmd$UpdateOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.members.AbstractMembersClass",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.members.AddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.members.DeleteCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.members.LeaveCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.members.ListCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.members.UpdateCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.organizations.AbstractOrganizationsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.organizations.AddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.organizations.DeleteCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.organizations.ListCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.organizations.OrganizationRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.organizations.OrganizationRefOptions$OrganizationRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.organizations.OrganizationsOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.organizations.UpdateCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.organizations.ViewCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.participants.AbstractParticipantsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.participants.AddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.participants.DeleteCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.participants.LeaveCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.participants.ListCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.participants.UpdateCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.AbstractPipelinesCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.AddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.DeleteCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.ExportCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.ImportCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.LabelsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.LaunchOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.ListCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.PipelineRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.PipelineRefOptions$PipelineRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.PipelineVisibility",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.UpdateCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.pipelines.ViewCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.AbstractRunsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.runs.CancelCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.DeleteCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.DumpCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.LabelsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.ListCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.RelaunchCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.RunViewOptions",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.ViewCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.download.DownloadCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.download.enums.RunDownloadFileType",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.metrics.MetricsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.metrics.enums.MetricColumn",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.metrics.enums.MetricPreviewFormat",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.metrics.enums.MetricType",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.tasks.TaskCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.tasks.TasksCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.runs.tasks.enums.TaskColumn",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.secrets.AbstractSecretsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.secrets.AddCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.secrets.DeleteCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.secrets.ListCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.secrets.SecretRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.secrets.SecretRefOptions$SecretRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.secrets.UpdateCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.secrets.ViewCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.AbstractStudiosCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.studios.AddAsNewCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.AddCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.CheckpointsCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.DataLinkRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.DataLinkRefOptions$DataLinkRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.DeleteCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.ListCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.ParentStudioRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.ParentStudioRefOptions$ParentStudioRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.StartCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.StopCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.StudioCheckpointRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.StudioCheckpointRefOptions$StudioCheckpointRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.StudioConfigurationOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.StudioRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.StudioRefOptions$StudioRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.StudioTemplateOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.StudioTemplateOptions$StudioTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.TemplatesCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.studios.ViewCmd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.teams.AbstractTeamsCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.teams.AddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.teams.DeleteCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.teams.ListCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.teams.MembersCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.teams.members.AddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.teams.members.DeleteCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.workspaces.AbstractWorkspaceCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.commands.workspaces.AddCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.workspaces.DeleteCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.workspaces.LeaveCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.workspaces.ListCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.workspaces.UpdateCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.workspaces.ViewCmd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.workspaces.WorkspaceRefOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.commands.workspaces.WorkspaceRefOptions$WorkspaceRef",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.ComputeEnvsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAddWithoutSubCommands","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testDelete","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDeleteInvalidAuth","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testDeleteNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testExport","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testImport","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testImportWithOverwrite","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListEmpty","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testPrimaryGet","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testPrimarySet","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testPrimarySetAzure","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdateInvalidName","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdateName","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testViewAwsForge","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testViewAwsManual","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testViewInvalidAuth","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testViewNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.AltairPlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithEnvVars","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.AwsBatchForgePlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvanced","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithDeprecated","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithEFS","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithEnvVars","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithFSX","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.AwsBatchManualPlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddAdvanceOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.AzBatchForgePlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.AzBatchManualPlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.EksPlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.GkePlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.GoogleBatchPlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.GoogleLifeSciencesPlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithFileStore","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.K8sPlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithStaging","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.LsfPlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.MoabPlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.SlurmPlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.computeenvs.platforms.UnivaPlatformTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAdvancedOptions","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.CredentialsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAddWithOverride","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDelete","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDeleteNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testInvalidAuth","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListEmpty","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testMissingSubcommand","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testShowUsage","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.AgentProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.AwsProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithOnlyAssumeRole","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testInvalidAuth","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testUpdate","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdateNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.AzureProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.BitbucketProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.CodeCommitProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithRepoURL","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.ContainerRegistryProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.GiteaProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.GithubProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.GitlabProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.GoogleProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testFileNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.K8sProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAddWithCertificate","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithToken","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.credentials.providers.SshProviderTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testInvalidPrivateKey","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.data.DataLinksCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testBrowse","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testBuildingSearchParameter","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"testDelete","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testFilteredList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdate","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.datasets.DatasetsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithOverwrite","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDelete","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDownload","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testFileNotExistsError","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdate","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdateWithFile","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUrl","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testVersions","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testView","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.exceptions.ApiExceptionMessage",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setMessage","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.cli.labels.LabelsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAddResource","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddSimple","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDeleteLabel","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListLabels","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListLabelsWithResourceTypeFilter","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListLabelsWithSimpleTypeFilter","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListLabelsWithTextFilter","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.members.MembersCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDelete","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testLeave","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListWithConflictingPageable","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithOffset","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithPage","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testUpdate","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.organizations.OrganizationsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddError","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithOverwrite","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDelete","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDeleteError","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testDeleteNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListEmpty","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testUpdate","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdateError","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testUpdateName","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testView","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testViewNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.participants.ParticipantsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAddMemberParticipantRole","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddParticipantWithOverwrite","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDeleteMemberParticipant","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDeleteTeam","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testLeave","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListTeam","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithConflictingPageable","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithOffset","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithPage","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testUpdateMemberParticipantRole","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdateTeamParticipantRole","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.pipelines.PipelinesCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithComputeEnv","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithStagingScripts","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAppendLabels","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testApplyLabels","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDelete","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testDeleteMultipleMatch","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testDeleteNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testExport","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testImport","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testImportWithComputeEnv","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testImportWithOverwrite","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testImportWithoutWorkdir","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListEmpty","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListFromWorkspace","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListFromWorkspaceNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithConflictingPageable","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithOffset","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithPage","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testMissingComputeEnvironment","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testRemoveLabels","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdate","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testUpdateComputeEnv","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testUpdateInSharedWorkspaceWithoutCE","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testUpdatePipelineInvalidName","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testUpdatePipelineName","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testView","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.responses.CredentialsAdded",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.CredentialsDeleted",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.CredentialsList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.CredentialsUpdated",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.InfoResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.Response",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.responses.actions.ActionAdd",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.actions.ActionUpdate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.actions.ActionsDelete",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.actions.ActionsList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.actions.ActionsView",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.collaborators.CollaboratorsList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.computeenvs.ComputeEnvAdded",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.computeenvs.ComputeEnvDeleted",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.computeenvs.ComputeEnvExport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.computeenvs.ComputeEnvList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.computeenvs.ComputeEnvUpdated",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.data.DataLinkContentList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.data.DataLinkDeleted",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.data.DataLinkView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.data.DataLinksList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.datasets.DatasetCreate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.datasets.DatasetDelete",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.datasets.DatasetList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.datasets.DatasetUpdate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.datasets.DatasetUrl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.datasets.DatasetVersionsList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.datasets.DatasetView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.labels.DeleteLabelsResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.labels.LabelAdded",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.labels.LabelUpdated",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.labels.ListLabelsCmdResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.labels.ManageLabels",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.members.MembersAdded",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.members.MembersDeleted",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.members.MembersLeave",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.members.MembersList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.members.MembersUpdate",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.organizations.OrganizationsDeleted",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.organizations.OrganizationsList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.organizations.OrganizationsUpdated",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.participants.ParticipantAdded",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.participants.ParticipantDeleted",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.participants.ParticipantLeft",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.participants.ParticipantUpdated",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.participants.ParticipantsList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.pipelines.PipelinesAdded",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.pipelines.PipelinesExport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.pipelines.PipelinesList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.pipelines.PipelinesView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.runs.RunCanceled",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.runs.RunDeleted",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.runs.RunDump",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.runs.RunFileDownloaded",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.runs.RunList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.runs.RunSubmited",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.runs.tasks.TasksView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.secrets.SecretAdded",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.secrets.SecretDeleted",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.secrets.SecretUpdated",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.secrets.SecretView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.secrets.SecretsList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.studios.StudioCheckpointsList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.studios.StudioDeleted",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.studios.StudioStartSubmitted",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.studios.StudioStopSubmitted",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.studios.StudiosCreated",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.studios.StudiosList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.studios.StudiosTemplatesList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.studios.StudiosView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.teams.TeamAdded",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.teams.TeamDeleted",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.teams.TeamsList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.teams.members.TeamMemberDeleted",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.teams.members.TeamMembersAdd",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.teams.members.TeamMembersList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.workspaces.WorkspaceAdded",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.workspaces.WorkspaceDeleted",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.workspaces.WorkspaceList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.workspaces.WorkspaceUpdated",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.responses.workspaces.WorkspaceView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.cli.runs.MetricsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testRunMetricsCondensed","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testRunMetricsExpanded","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.runs.RunsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testCancel","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testCancelNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testDelete","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDeleteNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testDownloadLog","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDownloadTaskLog","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testDumpRuns","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testInvalidAuth","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListEmpty","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithConflictingPageable","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithOffset","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithPage","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testRelaunch","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testShowUsage","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testView","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testViewNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.runs.TaskCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testTaskDetail","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testTaskDetailWithNullValues","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.runs.TasksCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"listRunTasksTests","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.secrets.SecretsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithOverride","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDelete","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdate","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testView","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.shared.ComputeEnvExportFormat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getConfig","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.shared.ComputeEnvExportFormat$ComputeConfigMixin",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.seqera.tower.cli.shared.ComputeEnvExportFormat$ComputeEnvExportFormatDeserializer",
  "methods":[{"name":"extractJsonNodeValue","parameterTypes":["com.fasterxml.jackson.databind.JsonNode","java.lang.String","com.fasterxml.jackson.databind.ObjectMapper"] }]
},
{
  "name":"io.seqera.tower.cli.shared.ComputeEnvExportFormatTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testFormatDeserialization","parameterTypes":[] }, {"name":"testFormatSerialization","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.shared.WorkflowMetadata",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getLabels","parameterTypes":[] }, {"name":"getOrganizationId","parameterTypes":[] }, {"name":"getOrganizationName","parameterTypes":[] }, {"name":"getPipelineId","parameterTypes":[] }, {"name":"getRunUrl","parameterTypes":[] }, {"name":"getUserId","parameterTypes":[] }, {"name":"getWorkspaceId","parameterTypes":[] }, {"name":"getWorkspaceName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.studios.StudiosCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"init","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddAsNew","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddAsNewThrowsInvalidDataStudioParentCheckpointException","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddAsNewUsingParentCheckpointId","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddAsNewUsingParentName","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddThrowsDataStudiosCustomTemplateWithCondaException","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddThrowsDataStudiosTemplateNotFoundException","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithAutoStartAndWait","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithEmptyLabelList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithNonDefaultConfig","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithNonExistentLabel","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testCheckpoints","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDelete","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListWithFilter","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListWithLabelsShown","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListWithOffset","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListWithPage","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testStart","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testStartByName","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testStartMultipleDataLinksFoundThrowsError","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testStartWithConfigOverride","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testStartWithMountDataWithConflictingParams","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testStartWithMountDateByName","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testStartWithWait","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testStop","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testStopByName","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testTemplates","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testView","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.teams.TeamsCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddWithOrganizationNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithOverwrite","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDeleteTeam","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListEmpty","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithConflictingPageable","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithOffset","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testListWithPage","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.teams.members.TeamMembersCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDelete","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.cli.utils.PaginationInfo"
},
{
  "name":"io.seqera.tower.cli.utils.VersionProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.utils.data.DataLinkProvider",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.cli.workspaces.WorkspacesCmdTest",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"leaveWorkspaceAsParticipantByIdAndWorkspaceReference","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAdd","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testAddOrganizationNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testAddWithOverwrite","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDeleteById","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testDeleteNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testLeaveWorkspaceAsParticipantById","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testList","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListByOrganization","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testListEmpty","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testUpdateById","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdateNameById","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testUpdateWorkspaceNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }, {"name":"testViewById","parameterTypes":["io.seqera.tower.cli.commands.enums.OutputType","org.mockserver.client.MockServerClient"] }, {"name":"testViewNotFound","parameterTypes":["org.mockserver.client.MockServerClient"] }]
},
{
  "name":"io.seqera.tower.model.AbstractGridConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getComputeQueue","parameterTypes":[] }, {"name":"getHeadQueue","parameterTypes":[] }, {"name":"getNextflowConfig","parameterTypes":[] }, {"name":"getPostRunScript","parameterTypes":[] }, {"name":"getPreRunScript","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }, {"name":"setComputeQueue","parameterTypes":["java.lang.String"] }, {"name":"setHeadQueue","parameterTypes":["java.lang.String"] }, {"name":"setPostRunScript","parameterTypes":["java.lang.String"] }, {"name":"setPreRunScript","parameterTypes":["java.lang.String"] }, {"name":"setWorkDir","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.AccessToken",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.model.ActionConfigType",
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.model.ActionEventType",
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.model.ActionResponseDto",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getConfig","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getEvent","parameterTypes":[] }, {"name":"getHookId","parameterTypes":[] }, {"name":"getHookUrl","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLabels","parameterTypes":[] }, {"name":"getLastSeen","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getLaunch","parameterTypes":[] }, {"name":"getMessage","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getSource","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"setConfig","parameterTypes":["io.seqera.tower.model.ActionConfigType"] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setEvent","parameterTypes":["io.seqera.tower.model.ActionEventType"] }, {"name":"setHookId","parameterTypes":["java.lang.String"] }, {"name":"setHookUrl","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setLabels","parameterTypes":["java.util.List"] }, {"name":"setLastSeen","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setLastUpdated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setLaunch","parameterTypes":["io.seqera.tower.model.Launch"] }, {"name":"setMessage","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setSource","parameterTypes":["io.seqera.tower.model.ActionSource"] }, {"name":"setStatus","parameterTypes":["io.seqera.tower.model.ActionStatus"] }]
},
{
  "name":"io.seqera.tower.model.ActionSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.ActionStatus",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.ActionTowerActionConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.model.ActionTowerActionEvent"
},
{
  "name":"io.seqera.tower.model.ActiveConnection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setLastActive","parameterTypes":["java.time.OffsetDateTime"] }]
},
{
  "name":"io.seqera.tower.model.AddMemberRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getUser","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.AddMemberResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setMember","parameterTypes":["io.seqera.tower.model.MemberDbDto"] }]
},
{
  "name":"io.seqera.tower.model.AddParticipantRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getMemberId","parameterTypes":[] }, {"name":"getTeamId","parameterTypes":[] }, {"name":"getUserNameOrEmail","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.AddParticipantResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setParticipant","parameterTypes":["io.seqera.tower.model.ParticipantDbDto"] }]
},
{
  "name":"io.seqera.tower.model.AddTeamMemberResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setMember","parameterTypes":["io.seqera.tower.model.MemberDbDto"] }]
},
{
  "name":"io.seqera.tower.model.AgentSecurityKeys",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getConnectionId","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getShared","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }, {"name":"setConnectionId","parameterTypes":["java.lang.String"] }, {"name":"setShared","parameterTypes":["java.lang.Boolean"] }, {"name":"setWorkDir","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.AltairPbsComputeConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.Analytics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getHubspotId","parameterTypes":[] }, {"name":"getPosthogApiHost","parameterTypes":[] }, {"name":"getPosthogApiKey","parameterTypes":[] }, {"name":"setHubspotId","parameterTypes":["java.lang.String"] }, {"name":"setPosthogApiHost","parameterTypes":["java.lang.String"] }, {"name":"setPosthogApiKey","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.AssociateActionLabelsRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getActionIds","parameterTypes":[] }, {"name":"getLabelIds","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.AssociatePipelineLabelsRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getLabelIds","parameterTypes":[] }, {"name":"getPipelineIds","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.AssociateWorkflowLabelsRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getLabelIds","parameterTypes":[] }, {"name":"getWorkflowIds","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.Avatar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.model.AwsBatchConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCliPath","parameterTypes":[] }, {"name":"getComputeJobRole","parameterTypes":[] }, {"name":"getComputeQueue","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getDragenInstanceType","parameterTypes":[] }, {"name":"getDragenQueue","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getExecutionRole","parameterTypes":[] }, {"name":"getForge","parameterTypes":[] }, {"name":"getForgedResources","parameterTypes":[] }, {"name":"getFusion2Enabled","parameterTypes":[] }, {"name":"getHeadJobCpus","parameterTypes":[] }, {"name":"getHeadJobMemoryMb","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHeadJobRole","parameterTypes":[] }, {"name":"getHeadQueue","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getLogGroup","parameterTypes":[] }, {"name":"getLustreId","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getNextflowConfig","parameterTypes":[] }, {"name":"getNvnmeStorageEnabled","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPostRunScript","parameterTypes":[] }, {"name":"getPreRunScript","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getRegion","parameterTypes":[] }, {"name":"getStorageType","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getVolumes","parameterTypes":[] }, {"name":"getWaveEnabled","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }, {"name":"setCliPath","parameterTypes":["java.lang.String"] }, {"name":"setComputeJobRole","parameterTypes":["java.lang.String"] }, {"name":"setComputeQueue","parameterTypes":["java.lang.String"] }, {"name":"setDragenInstanceType","parameterTypes":["java.lang.String"] }, {"name":"setDragenQueue","parameterTypes":["java.lang.String"] }, {"name":"setEnvironment","parameterTypes":["java.util.List"] }, {"name":"setExecutionRole","parameterTypes":["java.lang.String"] }, {"name":"setForge","parameterTypes":["io.seqera.tower.model.ForgeConfig"] }, {"name":"setForgedResources","parameterTypes":["java.util.List"] }, {"name":"setFusion2Enabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setHeadJobCpus","parameterTypes":["java.lang.Integer"] }, {"name":"setHeadJobMemoryMb","parameterTypes":["java.lang.Integer"] }, {"name":"setHeadJobRole","parameterTypes":["java.lang.String"] }, {"name":"setHeadQueue","parameterTypes":["java.lang.String"] }, {"name":"setLogGroup","parameterTypes":["java.lang.String"] }, {"name":"setNextflowConfig","parameterTypes":["java.lang.String"] }, {"name":"setNvnmeStorageEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setPostRunScript","parameterTypes":["java.lang.String"] }, {"name":"setPreRunScript","parameterTypes":["java.lang.String"] }, {"name":"setRegion","parameterTypes":["java.lang.String"] }, {"name":"setVolumes","parameterTypes":["java.util.List"] }, {"name":"setWaveEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setWorkDir","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.AwsSecurityKeys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAccessKey","parameterTypes":[] }, {"name":"getAssumeRoleArn","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getSecretKey","parameterTypes":[] }, {"name":"setAccessKey","parameterTypes":["java.lang.String"] }, {"name":"setAssumeRoleArn","parameterTypes":["java.lang.String"] }, {"name":"setSecretKey","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.AzBatchConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAutoPoolMode","parameterTypes":[] }, {"name":"getDeleteJobsOnCompletion","parameterTypes":[] }, {"name":"getDeletePoolsOnCompletion","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getForge","parameterTypes":[] }, {"name":"getFusion2Enabled","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHeadPool","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getManagedIdentityClientId_JsonNullable","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getNextflowConfig","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPostRunScript","parameterTypes":[] }, {"name":"getPreRunScript","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getRegion","parameterTypes":[] }, {"name":"getTokenDuration","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getWaveEnabled","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }, {"name":"setAutoPoolMode","parameterTypes":["java.lang.Boolean"] }, {"name":"setDeleteJobsOnCompletion","parameterTypes":["io.seqera.tower.model.JobCleanupPolicy"] }, {"name":"setDeletePoolsOnCompletion","parameterTypes":["java.lang.Boolean"] }, {"name":"setEnvironment","parameterTypes":["java.util.List"] }, {"name":"setForge","parameterTypes":["io.seqera.tower.model.AzBatchForgeConfig"] }, {"name":"setHeadPool","parameterTypes":["java.lang.String"] }, {"name":"setPostRunScript","parameterTypes":["java.lang.String"] }, {"name":"setPreRunScript","parameterTypes":["java.lang.String"] }, {"name":"setRegion","parameterTypes":["java.lang.String"] }, {"name":"setTokenDuration","parameterTypes":["java.lang.String"] }, {"name":"setWorkDir","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.AzBatchForgeConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAutoScale","parameterTypes":[] }, {"name":"getContainerRegIds","parameterTypes":[] }, {"name":"getDisposeOnDeletion","parameterTypes":[] }, {"name":"getVmCount","parameterTypes":[] }, {"name":"getVmType","parameterTypes":[] }, {"name":"setAutoScale","parameterTypes":["java.lang.Boolean"] }, {"name":"setDisposeOnDeletion","parameterTypes":["java.lang.Boolean"] }, {"name":"setVmCount","parameterTypes":["java.lang.Integer"] }, {"name":"setVmType","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.AzureEntraKeys"
},
{
  "name":"io.seqera.tower.model.AzureReposSecurityKeys"
},
{
  "name":"io.seqera.tower.model.AzureSecurityKeys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBatchKey","parameterTypes":[] }, {"name":"getBatchName","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getStorageKey","parameterTypes":[] }, {"name":"getStorageName","parameterTypes":[] }, {"name":"setBatchKey","parameterTypes":["java.lang.String"] }, {"name":"setBatchName","parameterTypes":["java.lang.String"] }, {"name":"setStorageKey","parameterTypes":["java.lang.String"] }, {"name":"setStorageName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.BitBucketSecurityKeys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getDiscriminator","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CloudPriceModel",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CodeCommitSecurityKeys",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setUsername","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.ComputeConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.model.ComputeEnvComputeConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getConfig","parameterTypes":[] }, {"name":"getCredentialsId","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getDeleted","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getLastUsed","parameterTypes":[] }, {"name":"getMessage","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getOrgId","parameterTypes":[] }, {"name":"getPlatform","parameterTypes":[] }, {"name":"getPrimary","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getWorkspaceId","parameterTypes":[] }, {"name":"setConfig","parameterTypes":["io.seqera.tower.model.ComputeConfig"] }, {"name":"setCredentialsId","parameterTypes":["java.lang.String"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setMessage","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setPlatform","parameterTypes":["io.seqera.tower.model.ComputeEnvComputeConfig$PlatformEnum"] }, {"name":"setStatus","parameterTypes":["io.seqera.tower.model.ComputeEnvStatus"] }]
},
{
  "name":"io.seqera.tower.model.ComputeEnvComputeConfig$PlatformEnum",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.ComputeEnvDbDto",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getId","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPlatform","parameterTypes":[] }, {"name":"getRegion","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setPlatform","parameterTypes":["java.lang.String"] }, {"name":"setRegion","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.ComputeEnvResponseDto",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getConfig","parameterTypes":[] }, {"name":"getCredentialsId","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getDeleted","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLabels","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getLastUsed","parameterTypes":[] }, {"name":"getManagedIdentityId","parameterTypes":[] }, {"name":"getMessage","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getOrgId","parameterTypes":[] }, {"name":"getPlatform","parameterTypes":[] }, {"name":"getPrimary","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getWorkspaceId","parameterTypes":[] }, {"name":"setConfig","parameterTypes":["io.seqera.tower.model.ComputeConfig"] }, {"name":"setCredentialsId","parameterTypes":["java.lang.String"] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setDeleted","parameterTypes":["java.lang.Boolean"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setLabels","parameterTypes":["java.util.List"] }, {"name":"setLastUpdated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setLastUsed","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setManagedIdentityId","parameterTypes":["java.lang.String"] }, {"name":"setMessage","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setOrgId","parameterTypes":["java.lang.Long"] }, {"name":"setPlatform","parameterTypes":["io.seqera.tower.model.ComputeEnvResponseDto$PlatformEnum"] }, {"name":"setPrimary","parameterTypes":["java.lang.Boolean"] }, {"name":"setStatus","parameterTypes":["io.seqera.tower.model.ComputeEnvStatus"] }, {"name":"setWorkspaceId","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.ComputeEnvResponseDto$PlatformEnum",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.ComputeEnvStatus",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }, {"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.ComputePlatformDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.ConfigEnvVariable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getCompute","parameterTypes":[] }, {"name":"getHead","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.ContainerRegistryKeys",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getRegistry","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setRegistry","parameterTypes":["java.lang.String"] }, {"name":"setUserName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.CreateActionRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getLaunch","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getSource","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CreateActionResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setActionId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.CreateComputeEnvRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getComputeEnv","parameterTypes":[] }, {"name":"getLabelIds","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CreateComputeEnvResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setComputeEnvId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.CreateCredentialsRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getCredentials","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CreateCredentialsResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCredentialsId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.CreateDatasetRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getDescription","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CreateDatasetResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setDataset","parameterTypes":["io.seqera.tower.model.Dataset"] }]
},
{
  "name":"io.seqera.tower.model.CreateLabelRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getIsDefault","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getResource","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CreateLabelResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setIsDefault","parameterTypes":["java.lang.Boolean"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setResource","parameterTypes":["java.lang.Boolean"] }, {"name":"setValue","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.CreateOrganizationRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getLogoId","parameterTypes":[] }, {"name":"getOrganization","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CreateOrganizationResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setOrganization","parameterTypes":["io.seqera.tower.model.OrganizationDbDto"] }]
},
{
  "name":"io.seqera.tower.model.CreatePipelineRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getIcon","parameterTypes":[] }, {"name":"getLabelIds","parameterTypes":[] }, {"name":"getLaunch","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"setLaunch","parameterTypes":["io.seqera.tower.model.WorkflowLaunchRequest"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.CreatePipelineResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setPipeline","parameterTypes":["io.seqera.tower.model.PipelineDbDto"] }]
},
{
  "name":"io.seqera.tower.model.CreatePipelineSecretRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getName","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CreatePipelineSecretResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setSecretId","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.CreateTeamMemberRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getUserNameOrEmail","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CreateTeamRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getAvatarId","parameterTypes":[] }, {"name":"getTeam","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CreateTeamResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setTeam","parameterTypes":["io.seqera.tower.model.TeamDbDto"] }]
},
{
  "name":"io.seqera.tower.model.CreateWorkspaceRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getWorkspace","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.CreateWorkspaceResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setWorkspace","parameterTypes":["io.seqera.tower.model.Workspace"] }]
},
{
  "name":"io.seqera.tower.model.Credentials",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBaseUrl","parameterTypes":[] }, {"name":"getCategory","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getDeleted","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getKeys","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getLastUsed","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getProvider","parameterTypes":[] }, {"name":"setBaseUrl","parameterTypes":["java.lang.String"] }, {"name":"setCategory","parameterTypes":["java.lang.String"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setKeys","parameterTypes":["io.seqera.tower.model.SecurityKeys"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setProvider","parameterTypes":["io.seqera.tower.model.Credentials$ProviderEnum"] }]
},
{
  "name":"io.seqera.tower.model.Credentials$ProviderEnum",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.DataLinkContentResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"addObjectsItem","parameterTypes":["io.seqera.tower.model.DataLinkItem"] }, {"name":"getObjects","parameterTypes":[] }, {"name":"getOriginalPath","parameterTypes":[] }, {"name":"nextPageToken","parameterTypes":["java.lang.String"] }, {"name":"objects","parameterTypes":["java.util.List"] }, {"name":"originalPath","parameterTypes":["java.lang.String"] }, {"name":"setNextPageToken","parameterTypes":["java.lang.String"] }, {"name":"setObjects","parameterTypes":["java.util.List"] }, {"name":"setOriginalPath","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.DataLinkCreateRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getCredentialsId","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getProvider","parameterTypes":[] }, {"name":"getPublicAccessible","parameterTypes":[] }, {"name":"getResourceRef","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.DataLinkCredentials",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getId","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getProvider","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setProvider","parameterTypes":["io.seqera.tower.model.DataLinkProvider"] }]
},
{
  "name":"io.seqera.tower.model.DataLinkDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getCredentials","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getHidden","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getMessage","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getProvider","parameterTypes":[] }, {"name":"getPublicAccessible","parameterTypes":[] }, {"name":"getRegion","parameterTypes":[] }, {"name":"getResourceRef","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }, {"name":"setCredentials","parameterTypes":["java.util.List"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setHidden","parameterTypes":["java.lang.Boolean"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setMessage","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setProvider","parameterTypes":["io.seqera.tower.model.DataLinkProvider"] }, {"name":"setPublicAccessible","parameterTypes":["java.lang.Boolean"] }, {"name":"setRegion","parameterTypes":["java.lang.String"] }, {"name":"setResourceRef","parameterTypes":["java.lang.String"] }, {"name":"setStatus","parameterTypes":["io.seqera.tower.model.DataLinkStatus"] }, {"name":"setType","parameterTypes":["io.seqera.tower.model.DataLinkType"] }]
},
{
  "name":"io.seqera.tower.model.DataLinkItem",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getMimeType","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getSize","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }, {"name":"setMimeType","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setSize","parameterTypes":["java.lang.Long"] }, {"name":"setType","parameterTypes":["io.seqera.tower.model.DataLinkItemType"] }]
},
{
  "name":"io.seqera.tower.model.DataLinkItemType",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.DataLinkProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.DataLinkResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"setDataLink","parameterTypes":["io.seqera.tower.model.DataLinkDto"] }]
},
{
  "name":"io.seqera.tower.model.DataLinkStatus",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"fromValue","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.DataLinkType",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.DataLinkUpdateRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getCredentialsId","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.DataLinksListResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"setDataLinks","parameterTypes":["java.util.List"] }, {"name":"setTotalSize","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioCheckpointDto",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAuthor","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getDateSaved","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"setAuthor","parameterTypes":["io.seqera.tower.model.StudioUser"] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setDateSaved","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioComputeEnvDto",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCredentialsId","parameterTypes":[] }, {"name":"getRegion","parameterTypes":[] }, {"name":"setCredentialsId","parameterTypes":["java.lang.String"] }, {"name":"setRegion","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCondaEnvironment","parameterTypes":[] }, {"name":"getCpu","parameterTypes":[] }, {"name":"getGpu","parameterTypes":[] }, {"name":"getLifespan","parameterTypes":[] }, {"name":"getLifespanHours","parameterTypes":[] }, {"name":"getMemory","parameterTypes":[] }, {"name":"getMountData","parameterTypes":[] }, {"name":"setCondaEnvironment","parameterTypes":["java.lang.String"] }, {"name":"setCpu","parameterTypes":["java.lang.Integer"] }, {"name":"setGpu","parameterTypes":["java.lang.Integer"] }, {"name":"setLifespan","parameterTypes":["java.lang.Integer"] }, {"name":"setLifespanHours","parameterTypes":["java.lang.Integer"] }, {"name":"setMemory","parameterTypes":["java.lang.Integer"] }, {"name":"setMountData","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioCreateRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getComputeEnvId","parameterTypes":[] }, {"name":"getConfiguration","parameterTypes":[] }, {"name":"getDataStudioToolUrl","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getInitialCheckpointId","parameterTypes":[] }, {"name":"getIsPrivate","parameterTypes":[] }, {"name":"getLabelIds_JsonNullable","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.DataStudioCreateResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setStudio","parameterTypes":["io.seqera.tower.model.DataStudioDto"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioDto",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getActiveConnections","parameterTypes":[] }, {"name":"getBaseImage","parameterTypes":[] }, {"name":"getComputeEnv","parameterTypes":[] }, {"name":"getConfiguration","parameterTypes":[] }, {"name":"getCustomImage","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getEffectiveLifespanHours","parameterTypes":[] }, {"name":"getIsPrivate","parameterTypes":[] }, {"name":"getLabels_JsonNullable","parameterTypes":[] }, {"name":"getLastStarted","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getMountedDataLinks","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getParentCheckpoint","parameterTypes":[] }, {"name":"getProgress","parameterTypes":[] }, {"name":"getSessionId","parameterTypes":[] }, {"name":"getStatusInfo","parameterTypes":[] }, {"name":"getStudioUrl","parameterTypes":[] }, {"name":"getTemplate","parameterTypes":[] }, {"name":"getUser","parameterTypes":[] }, {"name":"getWaveBuildUrl","parameterTypes":[] }, {"name":"getWorkspaceId","parameterTypes":[] }, {"name":"setActiveConnections","parameterTypes":["java.util.List"] }, {"name":"setBaseImage","parameterTypes":["java.lang.String"] }, {"name":"setComputeEnv","parameterTypes":["io.seqera.tower.model.DataStudioComputeEnvDto"] }, {"name":"setConfiguration","parameterTypes":["io.seqera.tower.model.DataStudioConfiguration"] }, {"name":"setCustomImage","parameterTypes":["java.lang.Boolean"] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setEffectiveLifespanHours","parameterTypes":["java.lang.Integer"] }, {"name":"setIsPrivate","parameterTypes":["java.lang.Boolean"] }, {"name":"setLabels_JsonNullable","parameterTypes":["org.openapitools.jackson.nullable.JsonNullable"] }, {"name":"setLastStarted","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setLastUpdated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setMountedDataLinks","parameterTypes":["java.util.List"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setParentCheckpoint","parameterTypes":["io.seqera.tower.model.DataStudioDtoParentCheckpoint"] }, {"name":"setProgress","parameterTypes":["java.util.List"] }, {"name":"setSessionId","parameterTypes":["java.lang.String"] }, {"name":"setStatusInfo","parameterTypes":["io.seqera.tower.model.DataStudioStatusInfo"] }, {"name":"setStudioUrl","parameterTypes":["java.lang.String"] }, {"name":"setTemplate","parameterTypes":["io.seqera.tower.model.DataStudioTemplate"] }, {"name":"setUser","parameterTypes":["io.seqera.tower.model.StudioUser"] }, {"name":"setWaveBuildUrl","parameterTypes":["java.lang.String"] }, {"name":"setWorkspaceId","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioDtoParentCheckpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCheckpointId","parameterTypes":[] }, {"name":"getCheckpointName","parameterTypes":[] }, {"name":"getSessionId","parameterTypes":[] }, {"name":"getStudioName","parameterTypes":[] }, {"name":"setCheckpointId","parameterTypes":["java.lang.Long"] }, {"name":"setCheckpointName","parameterTypes":["java.lang.String"] }, {"name":"setSessionId","parameterTypes":["java.lang.String"] }, {"name":"setStudioName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioListCheckpointsResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCheckpoints","parameterTypes":["java.util.List"] }, {"name":"setTotalSize","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioListResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setStudios","parameterTypes":["java.util.List"] }, {"name":"setTotalSize","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioProgressStep",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getMessage","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getWarnings","parameterTypes":[] }, {"name":"setMessage","parameterTypes":["java.lang.String"] }, {"name":"setStatus","parameterTypes":["io.seqera.tower.model.DataStudioProgressStepStatus"] }, {"name":"setWarnings","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioProgressStepStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }, {"name":"setValue","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioStartRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getConfiguration_JsonNullable","parameterTypes":[] }, {"name":"getDescription_JsonNullable","parameterTypes":[] }, {"name":"getLabelIds_JsonNullable","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.DataStudioStartResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setJobSubmitted","parameterTypes":["java.lang.Boolean"] }, {"name":"setSessionId","parameterTypes":["java.lang.String"] }, {"name":"setStatusInfo","parameterTypes":["io.seqera.tower.model.DataStudioStatusInfo"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }, {"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.DataStudioStatusInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getLastUpdate","parameterTypes":[] }, {"name":"getMessage","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"setLastUpdate","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setMessage","parameterTypes":["java.lang.String"] }, {"name":"setStatus","parameterTypes":["io.seqera.tower.model.DataStudioStatus"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioStopResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setJobSubmitted","parameterTypes":["java.lang.Boolean"] }, {"name":"setSessionId","parameterTypes":["java.lang.String"] }, {"name":"setStatusInfo","parameterTypes":["io.seqera.tower.model.DataStudioStatusInfo"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getIcon","parameterTypes":[] }, {"name":"getRepository","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getTool","parameterTypes":[] }, {"name":"setIcon","parameterTypes":["java.lang.String"] }, {"name":"setRepository","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioTemplatesListResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setTemplates","parameterTypes":["java.util.List"] }, {"name":"setTotalSize","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.DataStudioVersionStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.seqera.tower.model.Dataset",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getDeleted","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getMediaType","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setMediaType","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.DatasetVersionDbDto",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDatasetDescription","parameterTypes":[] }, {"name":"getDatasetId","parameterTypes":[] }, {"name":"getDatasetName","parameterTypes":[] }, {"name":"getFileName","parameterTypes":[] }, {"name":"getHasHeader","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getMediaType","parameterTypes":[] }, {"name":"getUrl","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"setDatasetDescription","parameterTypes":["java.lang.String"] }, {"name":"setDatasetId","parameterTypes":["java.lang.String"] }, {"name":"setDatasetName","parameterTypes":["java.lang.String"] }, {"name":"setFileName","parameterTypes":["java.lang.String"] }, {"name":"setHasHeader","parameterTypes":["java.lang.Boolean"] }, {"name":"setLastUpdated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setMediaType","parameterTypes":["java.lang.String"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }, {"name":"setVersion","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.DescribeActionResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAction","parameterTypes":["io.seqera.tower.model.ActionResponseDto"] }]
},
{
  "name":"io.seqera.tower.model.DescribeComputeEnvResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setComputeEnv","parameterTypes":["io.seqera.tower.model.ComputeEnvResponseDto"] }]
},
{
  "name":"io.seqera.tower.model.DescribeCredentialsResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCredentials","parameterTypes":["io.seqera.tower.model.Credentials"] }]
},
{
  "name":"io.seqera.tower.model.DescribeDatasetResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setDataset","parameterTypes":["io.seqera.tower.model.Dataset"] }]
},
{
  "name":"io.seqera.tower.model.DescribeLaunchResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setLaunch","parameterTypes":["io.seqera.tower.model.Launch"] }]
},
{
  "name":"io.seqera.tower.model.DescribeOrganizationResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setOrganization","parameterTypes":["io.seqera.tower.model.OrganizationDbDto"] }]
},
{
  "name":"io.seqera.tower.model.DescribePipelineResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setPipeline","parameterTypes":["io.seqera.tower.model.PipelineDbDto"] }]
},
{
  "name":"io.seqera.tower.model.DescribeTaskResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setTask","parameterTypes":["io.seqera.tower.model.Task"] }]
},
{
  "name":"io.seqera.tower.model.DescribeUserResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setDefaultWorkspaceId","parameterTypes":["java.lang.Long"] }, {"name":"setNeedConsent","parameterTypes":["java.lang.Boolean"] }, {"name":"setUser","parameterTypes":["io.seqera.tower.model.UserDbDto"] }]
},
{
  "name":"io.seqera.tower.model.DescribeWorkflowLaunchResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setLaunch","parameterTypes":["io.seqera.tower.model.WorkflowLaunchResponse"] }]
},
{
  "name":"io.seqera.tower.model.DescribeWorkflowResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setJobInfo","parameterTypes":["io.seqera.tower.model.JobInfoDto"] }, {"name":"setLabels","parameterTypes":["java.util.List"] }, {"name":"setOptimized","parameterTypes":["java.lang.Boolean"] }, {"name":"setOrgId","parameterTypes":["java.lang.Long"] }, {"name":"setOrgName","parameterTypes":["java.lang.String"] }, {"name":"setPlatform","parameterTypes":["io.seqera.tower.model.ComputePlatformDto"] }, {"name":"setProgress","parameterTypes":["io.seqera.tower.model.ProgressData"] }, {"name":"setWorkflow","parameterTypes":["io.seqera.tower.model.Workflow"] }, {"name":"setWorkspaceId","parameterTypes":["java.lang.Long"] }, {"name":"setWorkspaceName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.DescribeWorkspaceResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setWorkspace","parameterTypes":["io.seqera.tower.model.Workspace"] }]
},
{
  "name":"io.seqera.tower.model.EksComputeConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getClusterName","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getFusion2Enabled","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getNextflowConfig","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPostRunScript","parameterTypes":[] }, {"name":"getPreRunScript","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getRegion","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getWaveEnabled","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.ForgeConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAllocStrategy","parameterTypes":[] }, {"name":"getAllowBuckets","parameterTypes":[] }, {"name":"getArm64Enabled","parameterTypes":[] }, {"name":"getBidPercentage","parameterTypes":[] }, {"name":"getDisposeOnDeletion","parameterTypes":[] }, {"name":"getDragenAmiId","parameterTypes":[] }, {"name":"getDragenEnabled","parameterTypes":[] }, {"name":"getDragenInstanceType","parameterTypes":[] }, {"name":"getEbsAutoScale","parameterTypes":[] }, {"name":"getEbsBlockSize","parameterTypes":[] }, {"name":"getEbsBootSize","parameterTypes":[] }, {"name":"getEc2KeyPair","parameterTypes":[] }, {"name":"getEcsConfig","parameterTypes":[] }, {"name":"getEfsCreate","parameterTypes":[] }, {"name":"getEfsId","parameterTypes":[] }, {"name":"getEfsMount","parameterTypes":[] }, {"name":"getFargateHeadEnabled","parameterTypes":[] }, {"name":"getFsxMount","parameterTypes":[] }, {"name":"getFsxName","parameterTypes":[] }, {"name":"getFsxSize","parameterTypes":[] }, {"name":"getFusionEnabled","parameterTypes":[] }, {"name":"getGpuEnabled","parameterTypes":[] }, {"name":"getImageId","parameterTypes":[] }, {"name":"getInstanceTypes","parameterTypes":[] }, {"name":"getMaxCpus","parameterTypes":[] }, {"name":"getMinCpus","parameterTypes":[] }, {"name":"getSecurityGroups","parameterTypes":[] }, {"name":"getSubnets","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }, {"name":"getVpcId","parameterTypes":[] }, {"name":"setAllocStrategy","parameterTypes":["io.seqera.tower.model.ForgeConfig$AllocStrategyEnum"] }, {"name":"setAllowBuckets","parameterTypes":["java.util.List"] }, {"name":"setArm64Enabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setBidPercentage","parameterTypes":["java.lang.Integer"] }, {"name":"setDisposeOnDeletion","parameterTypes":["java.lang.Boolean"] }, {"name":"setDragenAmiId","parameterTypes":["java.lang.String"] }, {"name":"setDragenEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setDragenInstanceType","parameterTypes":["java.lang.String"] }, {"name":"setEbsAutoScale","parameterTypes":["java.lang.Boolean"] }, {"name":"setEbsBlockSize","parameterTypes":["java.lang.Integer"] }, {"name":"setEbsBootSize","parameterTypes":["java.lang.Integer"] }, {"name":"setEc2KeyPair","parameterTypes":["java.lang.String"] }, {"name":"setEcsConfig","parameterTypes":["java.lang.String"] }, {"name":"setEfsCreate","parameterTypes":["java.lang.Boolean"] }, {"name":"setEfsId","parameterTypes":["java.lang.String"] }, {"name":"setEfsMount","parameterTypes":["java.lang.String"] }, {"name":"setFargateHeadEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setFsxMount","parameterTypes":["java.lang.String"] }, {"name":"setFsxName","parameterTypes":["java.lang.String"] }, {"name":"setFsxSize","parameterTypes":["java.lang.Integer"] }, {"name":"setFusionEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setGpuEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setImageId","parameterTypes":["java.lang.String"] }, {"name":"setInstanceTypes","parameterTypes":["java.util.List"] }, {"name":"setMaxCpus","parameterTypes":["java.lang.Integer"] }, {"name":"setMinCpus","parameterTypes":["java.lang.Integer"] }, {"name":"setSecurityGroups","parameterTypes":["java.util.List"] }, {"name":"setSubnets","parameterTypes":["java.util.List"] }, {"name":"setType","parameterTypes":["io.seqera.tower.model.ForgeConfig$TypeEnum"] }, {"name":"setVpcId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.ForgeConfig$AllocStrategyEnum",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.ForgeConfig$TypeEnum",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }, {"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.GetProgressResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setProgress","parameterTypes":["io.seqera.tower.model.ProgressData"] }]
},
{
  "name":"io.seqera.tower.model.GetWorkflowMetricsResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setMetrics","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.GitHubSecurityKeys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setUsername","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.GitLabSecurityKeys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getDiscriminator","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getToken","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.GiteaSecurityKeys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getDiscriminator","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.GithubActionConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEvents","parameterTypes":[] }, {"name":"setEvents","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.GithubActionEvent",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCommitId","parameterTypes":[] }, {"name":"getCommitMessage","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getPusherEmail","parameterTypes":[] }, {"name":"getPusherName","parameterTypes":[] }, {"name":"getRef","parameterTypes":[] }, {"name":"getTimestamp","parameterTypes":[] }, {"name":"setCommitId","parameterTypes":["java.lang.String"] }, {"name":"setCommitMessage","parameterTypes":["java.lang.String"] }, {"name":"setPusherEmail","parameterTypes":["java.lang.String"] }, {"name":"setPusherName","parameterTypes":["java.lang.String"] }, {"name":"setRef","parameterTypes":["java.lang.String"] }, {"name":"setTimestamp","parameterTypes":["java.time.OffsetDateTime"] }]
},
{
  "name":"io.seqera.tower.model.GkeComputeConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getClusterName","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getFusion2Enabled","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getNextflowConfig","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPostRunScript","parameterTypes":[] }, {"name":"getPreRunScript","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getRegion","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getWaveEnabled","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.GoogleBatchConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBootDiskSizeGb","parameterTypes":[] }, {"name":"getComputeJobsInstanceTemplate","parameterTypes":[] }, {"name":"getCopyImage","parameterTypes":[] }, {"name":"getCpuPlatform","parameterTypes":[] }, {"name":"getDebugMode","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getFusion2Enabled","parameterTypes":[] }, {"name":"getHeadJobCpus","parameterTypes":[] }, {"name":"getHeadJobInstanceTemplate","parameterTypes":[] }, {"name":"getHeadJobMemoryMb","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLabels","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getLocation","parameterTypes":[] }, {"name":"getMachineType","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getNetwork","parameterTypes":[] }, {"name":"getNextflowConfig","parameterTypes":[] }, {"name":"getNfsMount","parameterTypes":[] }, {"name":"getNfsTarget","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPostRunScript","parameterTypes":[] }, {"name":"getPreRunScript","parameterTypes":[] }, {"name":"getProjectId","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getServiceAccount","parameterTypes":[] }, {"name":"getSpot","parameterTypes":[] }, {"name":"getSshDaemon","parameterTypes":[] }, {"name":"getSshImage","parameterTypes":[] }, {"name":"getSubnetwork","parameterTypes":[] }, {"name":"getUsePrivateAddress","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getWaveEnabled","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }, {"name":"setBootDiskSizeGb","parameterTypes":["java.lang.Integer"] }, {"name":"setComputeJobsInstanceTemplate","parameterTypes":["java.lang.String"] }, {"name":"setCopyImage","parameterTypes":["java.lang.String"] }, {"name":"setCpuPlatform","parameterTypes":["java.lang.String"] }, {"name":"setDebugMode","parameterTypes":["java.lang.Integer"] }, {"name":"setEnvironment","parameterTypes":["java.util.List"] }, {"name":"setFusion2Enabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setHeadJobCpus","parameterTypes":["java.lang.Integer"] }, {"name":"setHeadJobInstanceTemplate","parameterTypes":["java.lang.String"] }, {"name":"setHeadJobMemoryMb","parameterTypes":["java.lang.Integer"] }, {"name":"setLabels","parameterTypes":["java.util.Map"] }, {"name":"setLocation","parameterTypes":["java.lang.String"] }, {"name":"setMachineType","parameterTypes":["java.lang.String"] }, {"name":"setNetwork","parameterTypes":["java.lang.String"] }, {"name":"setNextflowConfig","parameterTypes":["java.lang.String"] }, {"name":"setNfsMount","parameterTypes":["java.lang.String"] }, {"name":"setNfsTarget","parameterTypes":["java.lang.String"] }, {"name":"setPostRunScript","parameterTypes":["java.lang.String"] }, {"name":"setPreRunScript","parameterTypes":["java.lang.String"] }, {"name":"setProjectId","parameterTypes":["java.lang.String"] }, {"name":"setServiceAccount","parameterTypes":["java.lang.String"] }, {"name":"setSpot","parameterTypes":["java.lang.Boolean"] }, {"name":"setSshDaemon","parameterTypes":["java.lang.Boolean"] }, {"name":"setSshImage","parameterTypes":["java.lang.String"] }, {"name":"setSubnetwork","parameterTypes":["java.lang.String"] }, {"name":"setUsePrivateAddress","parameterTypes":["java.lang.Boolean"] }, {"name":"setWaveEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setWorkDir","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.GoogleLifeSciencesConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getBootDiskSizeGb","parameterTypes":[] }, {"name":"getCopyImage","parameterTypes":[] }, {"name":"getDebugMode","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getHeadJobCpus","parameterTypes":[] }, {"name":"getHeadJobMemoryMb","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLabels","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getLocation","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getNextflowConfig","parameterTypes":[] }, {"name":"getNfsMount","parameterTypes":[] }, {"name":"getNfsTarget","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPostRunScript","parameterTypes":[] }, {"name":"getPreRunScript","parameterTypes":[] }, {"name":"getPreemptible","parameterTypes":[] }, {"name":"getProjectId","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getRegion","parameterTypes":[] }, {"name":"getSshDaemon","parameterTypes":[] }, {"name":"getSshImage","parameterTypes":[] }, {"name":"getUsePrivateAddress","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }, {"name":"getZones","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.GoogleSecurityKeys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getData","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"setData","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.JobCleanupPolicy",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.JobInfoDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setExitCode","parameterTypes":["java.lang.Integer"] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setMessage","parameterTypes":["java.lang.String"] }, {"name":"setOperationId","parameterTypes":["java.lang.String"] }, {"name":"setStatus","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.K8sComputeConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getComputeServiceAccount","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getHeadJobCpus","parameterTypes":[] }, {"name":"getHeadJobMemoryMb","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHeadPodSpec","parameterTypes":[] }, {"name":"getHeadServiceAccount","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getNamespace","parameterTypes":[] }, {"name":"getNextflowConfig","parameterTypes":[] }, {"name":"getPodCleanup","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPostRunScript","parameterTypes":[] }, {"name":"getPreRunScript","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getServer","parameterTypes":[] }, {"name":"getServicePodSpec","parameterTypes":[] }, {"name":"getSslCert","parameterTypes":[] }, {"name":"getStorageClaimName","parameterTypes":[] }, {"name":"getStorageMountPath","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.K8sSecurityKeys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getCertificate","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getPrivateKey","parameterTypes":[] }, {"name":"getToken","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.LabelDbDto",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getIsDefault","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getResource","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setIsDefault","parameterTypes":["java.lang.Boolean"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setResource","parameterTypes":["java.lang.Boolean"] }, {"name":"setValue","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.LabelType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getValue","parameterTypes":[] }, {"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.Launch",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getComputeEnv_JsonNullable","parameterTypes":[] }, {"name":"getConfigProfiles","parameterTypes":[] }, {"name":"getConfigText","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getEntryName","parameterTypes":[] }, {"name":"getHeadJobCpus","parameterTypes":[] }, {"name":"getHeadJobMemoryMb","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getLaunchContainer","parameterTypes":[] }, {"name":"getMainScript","parameterTypes":[] }, {"name":"getOptimizationId","parameterTypes":[] }, {"name":"getOptimizationTargets","parameterTypes":[] }, {"name":"getParamsText","parameterTypes":[] }, {"name":"getPipeline","parameterTypes":[] }, {"name":"getPostRunScript","parameterTypes":[] }, {"name":"getPreRunScript","parameterTypes":[] }, {"name":"getPullLatest","parameterTypes":[] }, {"name":"getResume","parameterTypes":[] }, {"name":"getResumeLaunchId","parameterTypes":[] }, {"name":"getRevision","parameterTypes":[] }, {"name":"getRunName","parameterTypes":[] }, {"name":"getSchemaName","parameterTypes":[] }, {"name":"getSessionId","parameterTypes":[] }, {"name":"getStubRun","parameterTypes":[] }, {"name":"getTowerConfig","parameterTypes":[] }, {"name":"getUserSecrets","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }, {"name":"getWorkspaceSecrets","parameterTypes":[] }, {"name":"setComputeEnv_JsonNullable","parameterTypes":["org.openapitools.jackson.nullable.JsonNullable"] }, {"name":"setConfigProfiles","parameterTypes":["java.util.List"] }, {"name":"setConfigText","parameterTypes":["java.lang.String"] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setEntryName","parameterTypes":["java.lang.String"] }, {"name":"setHeadJobCpus","parameterTypes":["java.lang.Integer"] }, {"name":"setHeadJobMemoryMb","parameterTypes":["java.lang.Integer"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setLastUpdated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setLaunchContainer","parameterTypes":["java.lang.String"] }, {"name":"setMainScript","parameterTypes":["java.lang.String"] }, {"name":"setOptimizationId","parameterTypes":["java.lang.String"] }, {"name":"setOptimizationTargets","parameterTypes":["java.lang.String"] }, {"name":"setParamsText","parameterTypes":["java.lang.String"] }, {"name":"setPipeline","parameterTypes":["java.lang.String"] }, {"name":"setPostRunScript","parameterTypes":["java.lang.String"] }, {"name":"setPreRunScript","parameterTypes":["java.lang.String"] }, {"name":"setPullLatest","parameterTypes":["java.lang.Boolean"] }, {"name":"setResume","parameterTypes":["java.lang.Boolean"] }, {"name":"setResumeLaunchId","parameterTypes":["java.lang.String"] }, {"name":"setRevision","parameterTypes":["java.lang.String"] }, {"name":"setRunName","parameterTypes":["java.lang.String"] }, {"name":"setSchemaName","parameterTypes":["java.lang.String"] }, {"name":"setSessionId","parameterTypes":["java.lang.String"] }, {"name":"setStubRun","parameterTypes":["java.lang.Boolean"] }, {"name":"setTowerConfig","parameterTypes":["java.lang.String"] }, {"name":"setUserSecrets","parameterTypes":["java.util.List"] }, {"name":"setWorkDir","parameterTypes":["java.lang.String"] }, {"name":"setWorkspaceSecrets","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.LaunchActionRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.model.LaunchActionResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.seqera.tower.model.ListActionsResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setActions","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.ListActionsResponseActionInfo",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getEndpoint","parameterTypes":[] }, {"name":"getEvent","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLabels","parameterTypes":[] }, {"name":"getLastSeen","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPipeline","parameterTypes":[] }, {"name":"getSource","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getUsageCmd","parameterTypes":[] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setEndpoint","parameterTypes":["java.lang.String"] }, {"name":"setEvent","parameterTypes":["io.seqera.tower.model.ActionEventType"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setLastSeen","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setPipeline","parameterTypes":["java.lang.String"] }, {"name":"setSource","parameterTypes":["io.seqera.tower.model.ActionSource"] }, {"name":"setStatus","parameterTypes":["io.seqera.tower.model.ActionStatus"] }, {"name":"setUsageCmd","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.ListComputeEnvsResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setComputeEnvs","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.ListComputeEnvsResponseEntry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCredentialsId","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLastUsed","parameterTypes":[] }, {"name":"getMessage","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPlatform","parameterTypes":[] }, {"name":"getPrimary","parameterTypes":[] }, {"name":"getRegion","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getVisibility","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }, {"name":"getWorkspaceName","parameterTypes":[] }, {"name":"setCredentialsId","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setLastUsed","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setMessage","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setPlatform","parameterTypes":["java.lang.String"] }, {"name":"setPrimary","parameterTypes":["java.lang.Boolean"] }, {"name":"setRegion","parameterTypes":["java.lang.String"] }, {"name":"setStatus","parameterTypes":["io.seqera.tower.model.ComputeEnvStatus"] }, {"name":"setVisibility","parameterTypes":["java.lang.String"] }, {"name":"setWorkDir","parameterTypes":["java.lang.String"] }, {"name":"setWorkspaceName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.ListCredentialsResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCredentials","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.ListDatasetVersionsResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setVersions","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.ListDatasetsResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setDatasets","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.ListLabelsResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setLabels","parameterTypes":["java.util.List"] }, {"name":"setTotalSize","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.ListMembersResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setMembers","parameterTypes":["java.util.List"] }, {"name":"setTotalSize","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.ListParticipantsResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setParticipants","parameterTypes":["java.util.List"] }, {"name":"setTotalSize","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.ListPipelineSecretsResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setPipelineSecrets","parameterTypes":["java.util.List"] }, {"name":"setTotalSize","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.ListPipelinesResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setPipelines","parameterTypes":["java.util.List"] }, {"name":"setTotalSize","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.ListTasksResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setTasks","parameterTypes":["java.util.List"] }, {"name":"setTotal","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.ListTeamResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setTeams","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.ListWorkflowsResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setWorkflows","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.ListWorkflowsResponseListWorkflowsElement",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getLabels","parameterTypes":[] }, {"name":"getOptimized","parameterTypes":[] }, {"name":"getOrgId","parameterTypes":[] }, {"name":"getOrgName","parameterTypes":[] }, {"name":"getProgress","parameterTypes":[] }, {"name":"getStarred","parameterTypes":[] }, {"name":"getWorkflow","parameterTypes":[] }, {"name":"getWorkspaceId","parameterTypes":[] }, {"name":"getWorkspaceName","parameterTypes":[] }, {"name":"setStarred","parameterTypes":["java.lang.Boolean"] }, {"name":"setWorkflow","parameterTypes":["io.seqera.tower.model.WorkflowDbDto"] }]
},
{
  "name":"io.seqera.tower.model.ListWorkspacesAndOrgResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setOrgsAndWorkspaces","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.LsfComputeConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getPerJobMemLimit","parameterTypes":[] }, {"name":"getPerTaskReserve","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getUnitForLimits","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.MemberDbDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAvatar","parameterTypes":[] }, {"name":"getEmail","parameterTypes":[] }, {"name":"getFirstName","parameterTypes":[] }, {"name":"getLastName","parameterTypes":[] }, {"name":"getMemberId","parameterTypes":[] }, {"name":"getRole","parameterTypes":[] }, {"name":"getUserId","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"setAvatar","parameterTypes":["java.lang.String"] }, {"name":"setEmail","parameterTypes":["java.lang.String"] }, {"name":"setFirstName","parameterTypes":["java.lang.String"] }, {"name":"setLastName","parameterTypes":["java.lang.String"] }, {"name":"setMemberId","parameterTypes":["java.lang.Long"] }, {"name":"setRole","parameterTypes":["io.seqera.tower.model.OrgRole"] }, {"name":"setUserName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.MoabComputeConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getComputeQueue","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHeadQueue","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPostRunScript","parameterTypes":[] }, {"name":"getPreRunScript","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.NavbarConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getMenus","parameterTypes":[] }, {"name":"setMenus","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.NavbarConfigNavbarMenu",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getLabel","parameterTypes":[] }, {"name":"getUrl","parameterTypes":[] }, {"name":"setLabel","parameterTypes":["java.lang.String"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.OrgAndWorkspaceDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getOrgId","parameterTypes":[] }, {"name":"getOrgLogoUrl","parameterTypes":[] }, {"name":"getOrgName","parameterTypes":[] }, {"name":"getOrgType","parameterTypes":[] }, {"name":"getRoles","parameterTypes":[] }, {"name":"getVisibility","parameterTypes":[] }, {"name":"getWorkspaceFullName","parameterTypes":[] }, {"name":"getWorkspaceId","parameterTypes":[] }, {"name":"getWorkspaceName","parameterTypes":[] }, {"name":"setOrgId","parameterTypes":["java.lang.Long"] }, {"name":"setOrgLogoUrl","parameterTypes":["java.lang.String"] }, {"name":"setOrgName","parameterTypes":["java.lang.String"] }, {"name":"setOrgType","parameterTypes":["io.seqera.tower.model.OrgType"] }, {"name":"setRoles","parameterTypes":["java.util.List"] }, {"name":"setVisibility","parameterTypes":["io.seqera.tower.model.Visibility"] }, {"name":"setWorkspaceFullName","parameterTypes":["java.lang.String"] }, {"name":"setWorkspaceId","parameterTypes":["java.lang.Long"] }, {"name":"setWorkspaceName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.OrgRole",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }, {"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.OrgType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.Organization",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getDateCreated","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getFullName","parameterTypes":[] }, {"name":"getId_JsonNullable","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getLocation","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getWebsite","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.OrganizationDbDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getFullName","parameterTypes":[] }, {"name":"getLocation","parameterTypes":[] }, {"name":"getLogoId","parameterTypes":[] }, {"name":"getLogoUrl","parameterTypes":[] }, {"name":"getMemberId","parameterTypes":[] }, {"name":"getMemberRole","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getOrgId","parameterTypes":[] }, {"name":"getPaying","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }, {"name":"getWebsite","parameterTypes":[] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setFullName","parameterTypes":["java.lang.String"] }, {"name":"setLocation","parameterTypes":["java.lang.String"] }, {"name":"setLogoId","parameterTypes":["java.lang.String"] }, {"name":"setLogoUrl","parameterTypes":["java.lang.String"] }, {"name":"setMemberId","parameterTypes":["java.lang.Long"] }, {"name":"setMemberRole","parameterTypes":["io.seqera.tower.model.OrgRole"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setOrgId","parameterTypes":["java.lang.Long"] }, {"name":"setWebsite","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.ParticipantDbDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getEmail","parameterTypes":[] }, {"name":"getFirstName","parameterTypes":[] }, {"name":"getLastName","parameterTypes":[] }, {"name":"getMemberId","parameterTypes":[] }, {"name":"getOrgRole","parameterTypes":[] }, {"name":"getParticipantId","parameterTypes":[] }, {"name":"getTeamAvatarUrl","parameterTypes":[] }, {"name":"getTeamId","parameterTypes":[] }, {"name":"getTeamName","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }, {"name":"getUserAvatarUrl","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getWspRole","parameterTypes":[] }, {"name":"setEmail","parameterTypes":["java.lang.String"] }, {"name":"setFirstName","parameterTypes":["java.lang.String"] }, {"name":"setLastName","parameterTypes":["java.lang.String"] }, {"name":"setMemberId","parameterTypes":["java.lang.Long"] }, {"name":"setOrgRole","parameterTypes":["io.seqera.tower.model.OrgRole"] }, {"name":"setParticipantId","parameterTypes":["java.lang.Long"] }, {"name":"setTeamAvatarUrl","parameterTypes":["java.lang.String"] }, {"name":"setTeamId","parameterTypes":["java.lang.Long"] }, {"name":"setTeamName","parameterTypes":["java.lang.String"] }, {"name":"setType","parameterTypes":["io.seqera.tower.model.ParticipantType"] }, {"name":"setUserAvatarUrl","parameterTypes":["java.lang.String"] }, {"name":"setUserName","parameterTypes":["java.lang.String"] }, {"name":"setWspRole","parameterTypes":["io.seqera.tower.model.WspRole"] }]
},
{
  "name":"io.seqera.tower.model.ParticipantType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }, {"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.PipelineDbDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getComputeEnv","parameterTypes":[] }, {"name":"getDeleted","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getIcon","parameterTypes":[] }, {"name":"getLabels","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getOptimizationId","parameterTypes":[] }, {"name":"getOptimizationStatus","parameterTypes":[] }, {"name":"getOptimizationTargets","parameterTypes":[] }, {"name":"getOrgId","parameterTypes":[] }, {"name":"getOrgName","parameterTypes":[] }, {"name":"getPipelineId","parameterTypes":[] }, {"name":"getRepository","parameterTypes":[] }, {"name":"getUserFirstName","parameterTypes":[] }, {"name":"getUserId","parameterTypes":[] }, {"name":"getUserLastName","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getVisibility","parameterTypes":[] }, {"name":"getWorkspaceId","parameterTypes":[] }, {"name":"getWorkspaceName","parameterTypes":[] }, {"name":"setComputeEnv","parameterTypes":["io.seqera.tower.model.ComputeEnvDbDto"] }, {"name":"setDeleted","parameterTypes":["java.lang.Boolean"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setIcon","parameterTypes":["java.lang.String"] }, {"name":"setLabels","parameterTypes":["java.util.List"] }, {"name":"setLastUpdated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setOptimizationId","parameterTypes":["java.lang.String"] }, {"name":"setOptimizationStatus","parameterTypes":["io.seqera.tower.model.PipelineOptimizationStatus"] }, {"name":"setOptimizationTargets","parameterTypes":["java.lang.String"] }, {"name":"setOrgId","parameterTypes":["java.lang.Long"] }, {"name":"setOrgName","parameterTypes":["java.lang.String"] }, {"name":"setPipelineId","parameterTypes":["java.lang.Long"] }, {"name":"setRepository","parameterTypes":["java.lang.String"] }, {"name":"setUserFirstName","parameterTypes":["java.lang.String"] }, {"name":"setUserId","parameterTypes":["java.lang.Long"] }, {"name":"setUserLastName","parameterTypes":["java.lang.String"] }, {"name":"setUserName","parameterTypes":["java.lang.String"] }, {"name":"setVisibility","parameterTypes":["java.lang.String"] }, {"name":"setWorkspaceId","parameterTypes":["java.lang.Long"] }, {"name":"setWorkspaceName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.PipelineOptimizationStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"fromValue","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.PipelineSecret",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getId_JsonNullable","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getLastUsed","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"setId_JsonNullable","parameterTypes":["org.openapitools.jackson.nullable.JsonNullable"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.PodCleanupPolicy",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.ProcessLoad",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCached","parameterTypes":["java.lang.Long"] }, {"name":"setCpuEfficiency","parameterTypes":["java.lang.Float"] }, {"name":"setCpuLoad","parameterTypes":["java.lang.Long"] }, {"name":"setCpuTime","parameterTypes":["java.lang.Long"] }, {"name":"setCpus","parameterTypes":["java.lang.Long"] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setFailed","parameterTypes":["java.lang.Long"] }, {"name":"setInvCtxSwitch","parameterTypes":["java.lang.Long"] }, {"name":"setLastUpdated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setLoadCpus","parameterTypes":["java.lang.Long"] }, {"name":"setLoadMemory","parameterTypes":["java.lang.Long"] }, {"name":"setLoadTasks","parameterTypes":["java.lang.Long"] }, {"name":"setMemoryEfficiency","parameterTypes":["java.lang.Float"] }, {"name":"setMemoryReq","parameterTypes":["java.lang.Long"] }, {"name":"setMemoryRss","parameterTypes":["java.lang.Long"] }, {"name":"setPeakCpus","parameterTypes":["java.lang.Long"] }, {"name":"setPeakMemory","parameterTypes":["java.lang.Long"] }, {"name":"setPeakTasks","parameterTypes":["java.lang.Long"] }, {"name":"setPending","parameterTypes":["java.lang.Long"] }, {"name":"setProcess","parameterTypes":["java.lang.String"] }, {"name":"setReadBytes","parameterTypes":["java.lang.Long"] }, {"name":"setRunning","parameterTypes":["java.lang.Long"] }, {"name":"setSubmitted","parameterTypes":["java.lang.Long"] }, {"name":"setSucceeded","parameterTypes":["java.lang.Long"] }, {"name":"setVolCtxSwitch","parameterTypes":["java.lang.Long"] }, {"name":"setWriteBytes","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.ProgressData",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setProcessesProgress","parameterTypes":["java.util.List"] }, {"name":"setWorkflowProgress","parameterTypes":["io.seqera.tower.model.WorkflowLoad"] }]
},
{
  "name":"io.seqera.tower.model.ResourceData",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getMax","parameterTypes":[] }, {"name":"getMaxLabel","parameterTypes":[] }, {"name":"getMean","parameterTypes":[] }, {"name":"getMin","parameterTypes":[] }, {"name":"getMinLabel","parameterTypes":[] }, {"name":"getQ1","parameterTypes":[] }, {"name":"getQ1Label","parameterTypes":[] }, {"name":"getQ2","parameterTypes":[] }, {"name":"getQ2Label","parameterTypes":[] }, {"name":"getQ3","parameterTypes":[] }, {"name":"getQ3Label","parameterTypes":[] }, {"name":"getWarnings","parameterTypes":[] }, {"name":"setMax","parameterTypes":["java.lang.Float"] }, {"name":"setMaxLabel","parameterTypes":["java.lang.String"] }, {"name":"setMean","parameterTypes":["java.lang.Float"] }, {"name":"setMin","parameterTypes":["java.lang.Float"] }, {"name":"setMinLabel","parameterTypes":["java.lang.String"] }, {"name":"setQ1","parameterTypes":["java.lang.Float"] }, {"name":"setQ1Label","parameterTypes":["java.lang.String"] }, {"name":"setQ2","parameterTypes":["java.lang.Float"] }, {"name":"setQ2Label","parameterTypes":["java.lang.String"] }, {"name":"setQ3","parameterTypes":["java.lang.Float"] }, {"name":"setQ3Label","parameterTypes":["java.lang.String"] }, {"name":"setWarnings","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.SSHSecurityKeys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getPassphrase","parameterTypes":[] }, {"name":"getPrivateKey","parameterTypes":[] }, {"name":"setPassphrase","parameterTypes":["java.lang.String"] }, {"name":"setPrivateKey","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.SecurityKeys",
  "allDeclaredMethods":true
},
{
  "name":"io.seqera.tower.model.SeqeraComputeConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.SeqeraComputeSecurityKeys"
},
{
  "name":"io.seqera.tower.model.ServiceInfo",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAllowInstanceCredentials","parameterTypes":[] }, {"name":"getAllowLocalRepos","parameterTypes":[] }, {"name":"getAllowNextflowCliLogs","parameterTypes":[] }, {"name":"getAnalytics","parameterTypes":[] }, {"name":"getApiVersion","parameterTypes":[] }, {"name":"getArm64Enabled","parameterTypes":[] }, {"name":"getAuthTypes","parameterTypes":[] }, {"name":"getCommitId","parameterTypes":[] }, {"name":"getContactEmail","parameterTypes":[] }, {"name":"getContentMaxFileSize","parameterTypes":[] }, {"name":"getContentUrl","parameterTypes":[] }, {"name":"getDataExplorerAllowedWorkspaces","parameterTypes":[] }, {"name":"getEvalWorkspaceIds","parameterTypes":[] }, {"name":"getForgePrefix","parameterTypes":[] }, {"name":"getGroundswellAllowedWorkspaces","parameterTypes":[] }, {"name":"getGroundswellEnabled","parameterTypes":[] }, {"name":"getHeartbeatInterval","parameterTypes":[] }, {"name":"getLandingUrl","parameterTypes":[] }, {"name":"getLoginPath","parameterTypes":[] }, {"name":"getLogoutUrl_JsonNullable","parameterTypes":[] }, {"name":"getNavbar","parameterTypes":[] }, {"name":"getScmsServerUrl","parameterTypes":[] }, {"name":"getSeqeraCloud","parameterTypes":[] }, {"name":"getTermsOfUseUrl","parameterTypes":[] }, {"name":"getUserWorkspaceEnabled","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"getWaveAllowedWorkspaces","parameterTypes":[] }, {"name":"getWaveEnabled","parameterTypes":[] }, {"name":"setAllowInstanceCredentials","parameterTypes":["java.lang.Boolean"] }, {"name":"setAllowLocalRepos","parameterTypes":["java.lang.Boolean"] }, {"name":"setAllowNextflowCliLogs","parameterTypes":["java.lang.Boolean"] }, {"name":"setAnalytics","parameterTypes":["io.seqera.tower.model.Analytics"] }, {"name":"setApiVersion","parameterTypes":["java.lang.String"] }, {"name":"setArm64Enabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setAuthTypes","parameterTypes":["java.util.List"] }, {"name":"setCommitId","parameterTypes":["java.lang.String"] }, {"name":"setContactEmail","parameterTypes":["java.lang.String"] }, {"name":"setContentMaxFileSize","parameterTypes":["java.lang.Long"] }, {"name":"setContentUrl","parameterTypes":["java.lang.String"] }, {"name":"setDataExplorerAllowedWorkspaces","parameterTypes":["java.util.List"] }, {"name":"setEvalWorkspaceIds","parameterTypes":["java.util.List"] }, {"name":"setForgePrefix","parameterTypes":["java.lang.String"] }, {"name":"setGroundswellAllowedWorkspaces","parameterTypes":["java.util.List"] }, {"name":"setGroundswellEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setHeartbeatInterval","parameterTypes":["java.lang.Integer"] }, {"name":"setLandingUrl","parameterTypes":["java.lang.String"] }, {"name":"setLoginPath","parameterTypes":["java.lang.String"] }, {"name":"setLogoutUrl_JsonNullable","parameterTypes":["org.openapitools.jackson.nullable.JsonNullable"] }, {"name":"setNavbar","parameterTypes":["io.seqera.tower.model.NavbarConfig"] }, {"name":"setScmsServerUrl","parameterTypes":["java.lang.String"] }, {"name":"setSeqeraCloud","parameterTypes":["java.lang.Boolean"] }, {"name":"setTermsOfUseUrl","parameterTypes":["java.lang.String"] }, {"name":"setUserWorkspaceEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setVersion","parameterTypes":["java.lang.String"] }, {"name":"setWaveAllowedWorkspaces","parameterTypes":["java.util.List"] }, {"name":"setWaveEnabled","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"io.seqera.tower.model.ServiceInfoResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setServiceInfo","parameterTypes":["io.seqera.tower.model.ServiceInfo"] }]
},
{
  "name":"io.seqera.tower.model.SlurmComputeConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"setEnvironment","parameterTypes":["java.util.List"] }, {"name":"setHeadJobOptions","parameterTypes":["java.lang.String"] }, {"name":"setHostName","parameterTypes":["java.lang.String"] }, {"name":"setLaunchDir","parameterTypes":["java.lang.String"] }, {"name":"setMaxQueueSize","parameterTypes":["java.lang.Integer"] }, {"name":"setPort","parameterTypes":["java.lang.Integer"] }, {"name":"setPropagateHeadJobOptions","parameterTypes":["java.lang.Boolean"] }, {"name":"setUserName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.StudioUser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAvatar","parameterTypes":[] }, {"name":"getEmail","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"setAvatar","parameterTypes":["java.lang.String"] }, {"name":"setEmail","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setUserName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.SubmitWorkflowLaunchRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getLaunch","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.SubmitWorkflowLaunchResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setWorkflowId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.Task",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAttempt","parameterTypes":[] }, {"name":"getCloudZone","parameterTypes":[] }, {"name":"getComplete","parameterTypes":[] }, {"name":"getContainer","parameterTypes":[] }, {"name":"getCost","parameterTypes":[] }, {"name":"getCpus","parameterTypes":[] }, {"name":"getDateCreated_JsonNullable","parameterTypes":[] }, {"name":"getDisk","parameterTypes":[] }, {"name":"getDuration","parameterTypes":[] }, {"name":"getEnv","parameterTypes":[] }, {"name":"getErrorAction","parameterTypes":[] }, {"name":"getExecutor","parameterTypes":[] }, {"name":"getExit","parameterTypes":[] }, {"name":"getExitStatus","parameterTypes":[] }, {"name":"getHash","parameterTypes":[] }, {"name":"getId_JsonNullable","parameterTypes":[] }, {"name":"getInvCtxt","parameterTypes":[] }, {"name":"getLastUpdated_JsonNullable","parameterTypes":[] }, {"name":"getMachineType","parameterTypes":[] }, {"name":"getMemory","parameterTypes":[] }, {"name":"getModule","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getNativeId","parameterTypes":[] }, {"name":"getPcpu","parameterTypes":[] }, {"name":"getPeakRss","parameterTypes":[] }, {"name":"getPeakVmem","parameterTypes":[] }, {"name":"getPmem","parameterTypes":[] }, {"name":"getPriceModel","parameterTypes":[] }, {"name":"getProcess","parameterTypes":[] }, {"name":"getQueue","parameterTypes":[] }, {"name":"getRchar","parameterTypes":[] }, {"name":"getReadBytes","parameterTypes":[] }, {"name":"getRealtime","parameterTypes":[] }, {"name":"getRss","parameterTypes":[] }, {"name":"getScratch","parameterTypes":[] }, {"name":"getScript","parameterTypes":[] }, {"name":"getStart","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getSubmit","parameterTypes":[] }, {"name":"getSyscr","parameterTypes":[] }, {"name":"getSyscw","parameterTypes":[] }, {"name":"getTag","parameterTypes":[] }, {"name":"getTaskId","parameterTypes":[] }, {"name":"getTime","parameterTypes":[] }, {"name":"getVmem","parameterTypes":[] }, {"name":"getVolCtxt","parameterTypes":[] }, {"name":"getWchar","parameterTypes":[] }, {"name":"getWorkdir","parameterTypes":[] }, {"name":"getWriteBytes","parameterTypes":[] }, {"name":"setAttempt","parameterTypes":["java.lang.Integer"] }, {"name":"setCloudZone","parameterTypes":["java.lang.String"] }, {"name":"setComplete","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setContainer","parameterTypes":["java.lang.String"] }, {"name":"setCost","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCpus","parameterTypes":["java.lang.Integer"] }, {"name":"setDateCreated_JsonNullable","parameterTypes":["org.openapitools.jackson.nullable.JsonNullable"] }, {"name":"setDisk","parameterTypes":["java.lang.Long"] }, {"name":"setDuration","parameterTypes":["java.lang.Long"] }, {"name":"setEnv","parameterTypes":["java.lang.String"] }, {"name":"setErrorAction","parameterTypes":["java.lang.String"] }, {"name":"setExecutor","parameterTypes":["java.lang.String"] }, {"name":"setExit","parameterTypes":["java.lang.Integer"] }, {"name":"setExit","parameterTypes":["java.lang.String"] }, {"name":"setExitStatus","parameterTypes":["java.lang.Integer"] }, {"name":"setHash","parameterTypes":["java.lang.String"] }, {"name":"setId_JsonNullable","parameterTypes":["org.openapitools.jackson.nullable.JsonNullable"] }, {"name":"setInvCtxt","parameterTypes":["java.lang.Long"] }, {"name":"setLastUpdated_JsonNullable","parameterTypes":["org.openapitools.jackson.nullable.JsonNullable"] }, {"name":"setMachineType","parameterTypes":["java.lang.String"] }, {"name":"setMemory","parameterTypes":["java.lang.Long"] }, {"name":"setModule","parameterTypes":["java.util.List"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setNativeId","parameterTypes":["java.lang.String"] }, {"name":"setPcpu","parameterTypes":["java.lang.Double"] }, {"name":"setPeakRss","parameterTypes":["java.lang.Long"] }, {"name":"setPeakVmem","parameterTypes":["java.lang.Long"] }, {"name":"setPmem","parameterTypes":["java.lang.Double"] }, {"name":"setPriceModel","parameterTypes":["io.seqera.tower.model.CloudPriceModel"] }, {"name":"setProcess","parameterTypes":["java.lang.String"] }, {"name":"setQueue","parameterTypes":["java.lang.String"] }, {"name":"setRchar","parameterTypes":["java.lang.Long"] }, {"name":"setReadBytes","parameterTypes":["java.lang.Long"] }, {"name":"setRealtime","parameterTypes":["java.lang.Long"] }, {"name":"setRss","parameterTypes":["java.lang.Long"] }, {"name":"setScratch","parameterTypes":["java.lang.String"] }, {"name":"setScript","parameterTypes":["java.lang.String"] }, {"name":"setStart","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setStatus","parameterTypes":["io.seqera.tower.model.TaskStatus"] }, {"name":"setSubmit","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setSyscr","parameterTypes":["java.lang.Long"] }, {"name":"setSyscw","parameterTypes":["java.lang.Long"] }, {"name":"setTag","parameterTypes":["java.lang.String"] }, {"name":"setTaskId","parameterTypes":["java.lang.Long"] }, {"name":"setTime","parameterTypes":["java.lang.Long"] }, {"name":"setVmem","parameterTypes":["java.lang.Long"] }, {"name":"setVolCtxt","parameterTypes":["java.lang.Long"] }, {"name":"setWchar","parameterTypes":["java.lang.Long"] }, {"name":"setWorkdir","parameterTypes":["java.lang.String"] }, {"name":"setWriteBytes","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.TaskStatus",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.Team",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getDateCreated","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getId_JsonNullable","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.TeamDbDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAvatarUrl","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getMembersCount","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getTeamId","parameterTypes":[] }, {"name":"setAvatarUrl","parameterTypes":["java.lang.String"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setMembersCount","parameterTypes":["java.lang.Long"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setTeamId","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.UnivaComputeConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getDiscriminator","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getHeadJobOptions","parameterTypes":[] }, {"name":"getHostName","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getMaxQueueSize","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getPropagateHeadJobOptions","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UpdateActionRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getLaunch","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UpdateComputeEnvRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getCredentialsId","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UpdateCredentialsRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getCredentials","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UpdateDatasetRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getDescription","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UpdateLabelRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getName","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UpdateLabelResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setValue","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.UpdateMemberRoleRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getRole","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UpdateOrganizationRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getDescription","parameterTypes":[] }, {"name":"getFullName","parameterTypes":[] }, {"name":"getLocation","parameterTypes":[] }, {"name":"getLogoId","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPaying_JsonNullable","parameterTypes":[] }, {"name":"getType_JsonNullable","parameterTypes":[] }, {"name":"getWebsite","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UpdateParticipantRoleRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getRole","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UpdatePipelineRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getDescription","parameterTypes":[] }, {"name":"getIcon","parameterTypes":[] }, {"name":"getLabelIds","parameterTypes":[] }, {"name":"getLaunch","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UpdatePipelineResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setPipeline","parameterTypes":["io.seqera.tower.model.PipelineDbDto"] }]
},
{
  "name":"io.seqera.tower.model.UpdatePipelineSecretRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UpdateWorkspaceRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getDescription","parameterTypes":[] }, {"name":"getFullName","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getVisibility","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.UploadDatasetVersionResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setVersion","parameterTypes":["io.seqera.tower.model.DatasetVersionDbDto"] }]
},
{
  "name":"io.seqera.tower.model.UserDbDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAvatar","parameterTypes":["java.lang.String"] }, {"name":"setAvatarId","parameterTypes":["java.lang.String"] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setDeleted","parameterTypes":["java.lang.Boolean"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setEmail","parameterTypes":["java.lang.String"] }, {"name":"setFirstName","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setLastAccess","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setLastName","parameterTypes":["java.lang.String"] }, {"name":"setLastUpdated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setMarketingConsent","parameterTypes":["java.lang.Boolean"] }, {"name":"setNotification","parameterTypes":["java.lang.Boolean"] }, {"name":"setOrganization","parameterTypes":["java.lang.String"] }, {"name":"setTermsOfUseConsent","parameterTypes":["java.lang.Boolean"] }, {"name":"setUserName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.Visibility",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.WfManifest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAuthor","parameterTypes":[] }, {"name":"getDefaultBranch","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getGitmodules","parameterTypes":[] }, {"name":"getHomePage","parameterTypes":[] }, {"name":"getMainScript","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getNextflowVersion","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"setAuthor","parameterTypes":["java.lang.String"] }, {"name":"setDefaultBranch","parameterTypes":["java.lang.String"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setGitmodules","parameterTypes":["java.lang.String"] }, {"name":"setHomePage","parameterTypes":["java.lang.String"] }, {"name":"setMainScript","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setNextflowVersion","parameterTypes":["java.lang.String"] }, {"name":"setVersion","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.WfNextflow",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBuild","parameterTypes":[] }, {"name":"getTimestamp","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"setBuild","parameterTypes":["java.lang.String"] }, {"name":"setTimestamp","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setVersion","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.WfStats",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCachedCount","parameterTypes":[] }, {"name":"getCachedCountFmt","parameterTypes":[] }, {"name":"getCachedDuration","parameterTypes":[] }, {"name":"getCachedPct","parameterTypes":[] }, {"name":"getComputeTimeFmt","parameterTypes":[] }, {"name":"getFailedCount","parameterTypes":[] }, {"name":"getFailedCountFmt","parameterTypes":[] }, {"name":"getFailedDuration","parameterTypes":[] }, {"name":"getFailedPct","parameterTypes":[] }, {"name":"getIgnoredCount","parameterTypes":[] }, {"name":"getIgnoredCountFmt","parameterTypes":[] }, {"name":"getIgnoredPct","parameterTypes":[] }, {"name":"getSucceedCount","parameterTypes":[] }, {"name":"getSucceedCountFmt","parameterTypes":[] }, {"name":"getSucceedDuration","parameterTypes":[] }, {"name":"getSucceedPct","parameterTypes":[] }, {"name":"setCachedCount","parameterTypes":["java.lang.Integer"] }, {"name":"setCachedCountFmt","parameterTypes":["java.lang.String"] }, {"name":"setCachedDuration","parameterTypes":["java.lang.Long"] }, {"name":"setCachedPct","parameterTypes":["java.lang.Float"] }, {"name":"setComputeTimeFmt","parameterTypes":["java.lang.String"] }, {"name":"setFailedCount","parameterTypes":["java.lang.Integer"] }, {"name":"setFailedCountFmt","parameterTypes":["java.lang.String"] }, {"name":"setFailedDuration","parameterTypes":["java.lang.Long"] }, {"name":"setFailedPct","parameterTypes":["java.lang.Float"] }, {"name":"setIgnoredCount","parameterTypes":["java.lang.Integer"] }, {"name":"setIgnoredCountFmt","parameterTypes":["java.lang.String"] }, {"name":"setIgnoredPct","parameterTypes":["java.lang.Float"] }, {"name":"setSucceedCount","parameterTypes":["java.lang.Integer"] }, {"name":"setSucceedCountFmt","parameterTypes":["java.lang.String"] }, {"name":"setSucceedDuration","parameterTypes":["java.lang.Long"] }, {"name":"setSucceedPct","parameterTypes":["java.lang.Float"] }]
},
{
  "name":"io.seqera.tower.model.Workflow",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCommandLine","parameterTypes":[] }, {"name":"getCommitId","parameterTypes":[] }, {"name":"getComplete","parameterTypes":[] }, {"name":"getConfigFiles","parameterTypes":[] }, {"name":"getConfigText","parameterTypes":[] }, {"name":"getContainer","parameterTypes":[] }, {"name":"getContainerEngine","parameterTypes":[] }, {"name":"getDateCreated_JsonNullable","parameterTypes":[] }, {"name":"getDeleted","parameterTypes":[] }, {"name":"getDuration","parameterTypes":[] }, {"name":"getErrorMessage","parameterTypes":[] }, {"name":"getErrorReport","parameterTypes":[] }, {"name":"getExitStatus","parameterTypes":[] }, {"name":"getHomeDir","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLastUpdated_JsonNullable","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getLaunchId","parameterTypes":[] }, {"name":"getLogFile","parameterTypes":[] }, {"name":"getManifest","parameterTypes":[] }, {"name":"getNextflow","parameterTypes":[] }, {"name":"getOperationId","parameterTypes":[] }, {"name":"getOutFile","parameterTypes":[] }, {"name":"getOwnerId","parameterTypes":[] }, {"name":"getParams","parameterTypes":[] }, {"name":"getProfile","parameterTypes":[] }, {"name":"getProjectDir","parameterTypes":[] }, {"name":"getProjectName","parameterTypes":[] }, {"name":"getRepository","parameterTypes":[] }, {"name":"getRequiresAttention","parameterTypes":[] }, {"name":"getResume","parameterTypes":[] }, {"name":"getRevision","parameterTypes":[] }, {"name":"getRunName","parameterTypes":[] }, {"name":"getScriptFile","parameterTypes":[] }, {"name":"getScriptId","parameterTypes":[] }, {"name":"getScriptName","parameterTypes":[] }, {"name":"getSessionId","parameterTypes":[] }, {"name":"getStart","parameterTypes":[] }, {"name":"getStats","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getSubmit","parameterTypes":[] }, {"name":"getSuccess","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }, {"name":"setCommandLine","parameterTypes":["java.lang.String"] }, {"name":"setCommitId","parameterTypes":["java.lang.String"] }, {"name":"setComplete","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setConfigFiles","parameterTypes":["java.util.List"] }, {"name":"setConfigText","parameterTypes":["java.lang.String"] }, {"name":"setContainer","parameterTypes":["java.lang.String"] }, {"name":"setContainerEngine","parameterTypes":["java.lang.String"] }, {"name":"setDateCreated_JsonNullable","parameterTypes":["org.openapitools.jackson.nullable.JsonNullable"] }, {"name":"setDuration","parameterTypes":["java.lang.Long"] }, {"name":"setErrorMessage","parameterTypes":["java.lang.String"] }, {"name":"setErrorReport","parameterTypes":["java.lang.String"] }, {"name":"setExitStatus","parameterTypes":["java.lang.Integer"] }, {"name":"setHomeDir","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setLastUpdated_JsonNullable","parameterTypes":["org.openapitools.jackson.nullable.JsonNullable"] }, {"name":"setLaunchDir","parameterTypes":["java.lang.String"] }, {"name":"setLaunchId","parameterTypes":["java.lang.String"] }, {"name":"setLogFile","parameterTypes":["java.lang.String"] }, {"name":"setManifest","parameterTypes":["io.seqera.tower.model.WfManifest"] }, {"name":"setNextflow","parameterTypes":["io.seqera.tower.model.WfNextflow"] }, {"name":"setOperationId","parameterTypes":["java.lang.String"] }, {"name":"setOutFile","parameterTypes":["java.lang.String"] }, {"name":"setParams","parameterTypes":["java.util.Map"] }, {"name":"setProfile","parameterTypes":["java.lang.String"] }, {"name":"setProjectDir","parameterTypes":["java.lang.String"] }, {"name":"setProjectName","parameterTypes":["java.lang.String"] }, {"name":"setRepository","parameterTypes":["java.lang.String"] }, {"name":"setResume","parameterTypes":["java.lang.Boolean"] }, {"name":"setRevision","parameterTypes":["java.lang.String"] }, {"name":"setRunName","parameterTypes":["java.lang.String"] }, {"name":"setScriptFile","parameterTypes":["java.lang.String"] }, {"name":"setScriptId","parameterTypes":["java.lang.String"] }, {"name":"setScriptName","parameterTypes":["java.lang.String"] }, {"name":"setSessionId","parameterTypes":["java.lang.String"] }, {"name":"setStart","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setStats","parameterTypes":["io.seqera.tower.model.WfStats"] }, {"name":"setStatus","parameterTypes":["io.seqera.tower.model.WorkflowStatus"] }, {"name":"setSubmit","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setSuccess","parameterTypes":["java.lang.Boolean"] }, {"name":"setUserName","parameterTypes":["java.lang.String"] }, {"name":"setWorkDir","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.seqera.tower.model.WorkflowDbDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCommandLine","parameterTypes":[] }, {"name":"getCommitId","parameterTypes":[] }, {"name":"getComplete","parameterTypes":[] }, {"name":"getConfigFiles","parameterTypes":[] }, {"name":"getConfigText","parameterTypes":[] }, {"name":"getContainer","parameterTypes":[] }, {"name":"getContainerEngine","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getDeleted","parameterTypes":[] }, {"name":"getDuration","parameterTypes":[] }, {"name":"getErrorMessage","parameterTypes":[] }, {"name":"getErrorReport","parameterTypes":[] }, {"name":"getExitStatus","parameterTypes":[] }, {"name":"getHomeDir","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getLaunchDir","parameterTypes":[] }, {"name":"getLaunchId","parameterTypes":[] }, {"name":"getManifest","parameterTypes":[] }, {"name":"getMessages","parameterTypes":[] }, {"name":"getNextflow","parameterTypes":[] }, {"name":"getOwnerId","parameterTypes":[] }, {"name":"getParams","parameterTypes":[] }, {"name":"getProfile","parameterTypes":[] }, {"name":"getProjectDir","parameterTypes":[] }, {"name":"getProjectName","parameterTypes":[] }, {"name":"getRepository","parameterTypes":[] }, {"name":"getRequiresAttention","parameterTypes":[] }, {"name":"getResume","parameterTypes":[] }, {"name":"getRevision","parameterTypes":[] }, {"name":"getRunName","parameterTypes":[] }, {"name":"getScriptFile","parameterTypes":[] }, {"name":"getScriptId","parameterTypes":[] }, {"name":"getScriptName","parameterTypes":[] }, {"name":"getSessionId","parameterTypes":[] }, {"name":"getStart","parameterTypes":[] }, {"name":"getStats","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getSubmit","parameterTypes":[] }, {"name":"getSuccess","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }, {"name":"setCommandLine","parameterTypes":["java.lang.String"] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setLastUpdated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setOwnerId","parameterTypes":["java.lang.Long"] }, {"name":"setRunName","parameterTypes":["java.lang.String"] }, {"name":"setSubmit","parameterTypes":["java.time.OffsetDateTime"] }]
},
{
  "name":"io.seqera.tower.model.WorkflowLaunchRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getComputeEnvId","parameterTypes":[] }, {"name":"getConfigProfiles","parameterTypes":[] }, {"name":"getConfigText","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getEntryName","parameterTypes":[] }, {"name":"getHeadJobCpus","parameterTypes":[] }, {"name":"getHeadJobMemoryMb","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLabelIds","parameterTypes":[] }, {"name":"getLaunchContainer","parameterTypes":[] }, {"name":"getMainScript","parameterTypes":[] }, {"name":"getOptimizationId","parameterTypes":[] }, {"name":"getOptimizationTargets","parameterTypes":[] }, {"name":"getParamsText","parameterTypes":[] }, {"name":"getPipeline","parameterTypes":[] }, {"name":"getPostRunScript","parameterTypes":[] }, {"name":"getPreRunScript","parameterTypes":[] }, {"name":"getPullLatest","parameterTypes":[] }, {"name":"getResume","parameterTypes":[] }, {"name":"getRevision","parameterTypes":[] }, {"name":"getRunName","parameterTypes":[] }, {"name":"getSchemaName","parameterTypes":[] }, {"name":"getSessionId","parameterTypes":[] }, {"name":"getStubRun","parameterTypes":[] }, {"name":"getTowerConfig","parameterTypes":[] }, {"name":"getUserSecrets","parameterTypes":[] }, {"name":"getWorkDir","parameterTypes":[] }, {"name":"getWorkspaceSecrets","parameterTypes":[] }, {"name":"setComputeEnvId","parameterTypes":["java.lang.String"] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setPipeline","parameterTypes":["java.lang.String"] }, {"name":"setPullLatest","parameterTypes":["java.lang.Boolean"] }, {"name":"setResume","parameterTypes":["java.lang.Boolean"] }, {"name":"setRevision","parameterTypes":["java.lang.String"] }, {"name":"setStubRun","parameterTypes":["java.lang.Boolean"] }, {"name":"setUserSecrets","parameterTypes":["java.util.List"] }, {"name":"setWorkDir","parameterTypes":["java.lang.String"] }, {"name":"setWorkspaceSecrets","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.WorkflowLaunchResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setComputeEnv","parameterTypes":["io.seqera.tower.model.ComputeEnvComputeConfig"] }, {"name":"setConfigProfiles","parameterTypes":["java.util.List"] }, {"name":"setConfigText","parameterTypes":["java.lang.String"] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setEntryName","parameterTypes":["java.lang.String"] }, {"name":"setHeadJobCpus","parameterTypes":["java.lang.Integer"] }, {"name":"setHeadJobMemoryMb","parameterTypes":["java.lang.Integer"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setMainScript","parameterTypes":["java.lang.String"] }, {"name":"setOptimizationId","parameterTypes":["java.lang.String"] }, {"name":"setOptimizationTargets","parameterTypes":["java.lang.String"] }, {"name":"setParamsText","parameterTypes":["java.lang.String"] }, {"name":"setPipeline","parameterTypes":["java.lang.String"] }, {"name":"setPipelineId","parameterTypes":["java.lang.Long"] }, {"name":"setPostRunScript","parameterTypes":["java.lang.String"] }, {"name":"setPreRunScript","parameterTypes":["java.lang.String"] }, {"name":"setPullLatest","parameterTypes":["java.lang.Boolean"] }, {"name":"setResume","parameterTypes":["java.lang.Boolean"] }, {"name":"setResumeCommitId","parameterTypes":["java.lang.String"] }, {"name":"setResumeDir","parameterTypes":["java.lang.String"] }, {"name":"setRevision","parameterTypes":["java.lang.String"] }, {"name":"setSchemaName","parameterTypes":["java.lang.String"] }, {"name":"setSessionId","parameterTypes":["java.lang.String"] }, {"name":"setStubRun","parameterTypes":["java.lang.Boolean"] }, {"name":"setTowerConfig","parameterTypes":["java.lang.String"] }, {"name":"setUserSecrets","parameterTypes":["java.util.List"] }, {"name":"setWorkDir","parameterTypes":["java.lang.String"] }, {"name":"setWorkspaceSecrets","parameterTypes":["java.util.List"] }]
},
{
  "name":"io.seqera.tower.model.WorkflowLoad",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCached","parameterTypes":[] }, {"name":"getCost","parameterTypes":[] }, {"name":"getCpuEfficiency","parameterTypes":[] }, {"name":"getCpuLoad","parameterTypes":[] }, {"name":"getCpuTime","parameterTypes":[] }, {"name":"getCpus","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getExecutors","parameterTypes":[] }, {"name":"getFailed","parameterTypes":[] }, {"name":"getInvCtxSwitch","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getLoadCpus","parameterTypes":[] }, {"name":"getLoadMemory","parameterTypes":[] }, {"name":"getLoadTasks","parameterTypes":[] }, {"name":"getMemoryEfficiency","parameterTypes":[] }, {"name":"getMemoryReq","parameterTypes":[] }, {"name":"getMemoryRss","parameterTypes":[] }, {"name":"getPeakCpus","parameterTypes":[] }, {"name":"getPeakMemory","parameterTypes":[] }, {"name":"getPeakTasks","parameterTypes":[] }, {"name":"getPending","parameterTypes":[] }, {"name":"getReadBytes","parameterTypes":[] }, {"name":"getRunning","parameterTypes":[] }, {"name":"getSubmitted","parameterTypes":[] }, {"name":"getSucceeded","parameterTypes":[] }, {"name":"getVolCtxSwitch","parameterTypes":[] }, {"name":"getWriteBytes","parameterTypes":[] }, {"name":"setCached","parameterTypes":["java.lang.Long"] }, {"name":"setCost","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCpuEfficiency","parameterTypes":["java.lang.Float"] }, {"name":"setCpuLoad","parameterTypes":["java.lang.Long"] }, {"name":"setCpuTime","parameterTypes":["java.lang.Long"] }, {"name":"setCpus","parameterTypes":["java.lang.Long"] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setExecutors","parameterTypes":["java.util.List"] }, {"name":"setFailed","parameterTypes":["java.lang.Long"] }, {"name":"setInvCtxSwitch","parameterTypes":["java.lang.Long"] }, {"name":"setLastUpdated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setLoadCpus","parameterTypes":["java.lang.Long"] }, {"name":"setLoadMemory","parameterTypes":["java.lang.Long"] }, {"name":"setLoadTasks","parameterTypes":["java.lang.Long"] }, {"name":"setMemoryEfficiency","parameterTypes":["java.lang.Float"] }, {"name":"setMemoryReq","parameterTypes":["java.lang.Long"] }, {"name":"setMemoryRss","parameterTypes":["java.lang.Long"] }, {"name":"setPeakCpus","parameterTypes":["java.lang.Long"] }, {"name":"setPeakMemory","parameterTypes":["java.lang.Long"] }, {"name":"setPeakTasks","parameterTypes":["java.lang.Long"] }, {"name":"setPending","parameterTypes":["java.lang.Long"] }, {"name":"setReadBytes","parameterTypes":["java.lang.Long"] }, {"name":"setRunning","parameterTypes":["java.lang.Long"] }, {"name":"setSubmitted","parameterTypes":["java.lang.Long"] }, {"name":"setSucceeded","parameterTypes":["java.lang.Long"] }, {"name":"setVolCtxSwitch","parameterTypes":["java.lang.Long"] }, {"name":"setWriteBytes","parameterTypes":["java.lang.Long"] }]
},
{
  "name":"io.seqera.tower.model.WorkflowMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCpu","parameterTypes":[] }, {"name":"getCpuUsage","parameterTypes":[] }, {"name":"getId_JsonNullable","parameterTypes":[] }, {"name":"getMem","parameterTypes":[] }, {"name":"getMemUsage","parameterTypes":[] }, {"name":"getProcess","parameterTypes":[] }, {"name":"getReads","parameterTypes":[] }, {"name":"getTime","parameterTypes":[] }, {"name":"getTimeUsage","parameterTypes":[] }, {"name":"getVmem","parameterTypes":[] }, {"name":"getWrites","parameterTypes":[] }, {"name":"setCpu","parameterTypes":["io.seqera.tower.model.ResourceData"] }, {"name":"setCpuUsage","parameterTypes":["io.seqera.tower.model.ResourceData"] }, {"name":"setId_JsonNullable","parameterTypes":["org.openapitools.jackson.nullable.JsonNullable"] }, {"name":"setMem","parameterTypes":["io.seqera.tower.model.ResourceData"] }, {"name":"setMemUsage","parameterTypes":["io.seqera.tower.model.ResourceData"] }, {"name":"setProcess","parameterTypes":["java.lang.String"] }, {"name":"setReads","parameterTypes":["io.seqera.tower.model.ResourceData"] }, {"name":"setTime","parameterTypes":["io.seqera.tower.model.ResourceData"] }, {"name":"setTimeUsage","parameterTypes":["io.seqera.tower.model.ResourceData"] }, {"name":"setVmem","parameterTypes":["io.seqera.tower.model.ResourceData"] }, {"name":"setWrites","parameterTypes":["io.seqera.tower.model.ResourceData"] }]
},
{
  "name":"io.seqera.tower.model.WorkflowStatus",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }, {"name":"values","parameterTypes":[] }]
},
{
  "name":"io.seqera.tower.model.Workspace",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getDateCreated","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getFullName","parameterTypes":[] }, {"name":"getId_JsonNullable","parameterTypes":[] }, {"name":"getLastUpdated","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getVisibility","parameterTypes":[] }, {"name":"setDateCreated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setFullName","parameterTypes":["java.lang.String"] }, {"name":"setId_JsonNullable","parameterTypes":["org.openapitools.jackson.nullable.JsonNullable"] }, {"name":"setLastUpdated","parameterTypes":["java.time.OffsetDateTime"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setVisibility","parameterTypes":["io.seqera.tower.model.Visibility"] }]
},
{
  "name":"io.seqera.tower.model.WspRole",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"fromValue","parameterTypes":["java.lang.String"] }, {"name":"getValue","parameterTypes":[] }, {"name":"values","parameterTypes":[] }]
},
{
  "name":"io.swagger.annotations.ApiModelProperty",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"io.swagger.annotations.ApiModelProperty$AccessMode",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"io.swagger.annotations.Extension",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"io.swagger.annotations.ExtensionProperty",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"java.awt.image.RenderedImage"
},
{
  "name":"java.io.Console",
  "methods":[{"name":"readPassword","parameterTypes":["java.lang.String","java.lang.Object[]"] }]
},
{
  "name":"java.io.File",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.io.FileNotFoundException",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.IOException",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.io.InputStream"
},
{
  "name":"java.io.Reader"
},
{
  "name":"java.io.Serializable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.$JaCoCo",
  "fields":[{"name":"data"}]
},
{
  "name":"java.lang.AutoCloseable"
},
{
  "name":"java.lang.Boolean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Character",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Class",
  "methods":[{"name":"cast","parameterTypes":["java.lang.Object"] }, {"name":"getModule","parameterTypes":[] }]
},
{
  "name":"java.lang.ClassLoader",
  "methods":[{"name":"getUnnamedModule","parameterTypes":[] }]
},
{
  "name":"java.lang.Class[]"
},
{
  "name":"java.lang.Cloneable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Comparable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Deprecated",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"java.lang.Double",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Enum",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Float",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.FunctionalInterface",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"java.lang.Integer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Iterable"
},
{
  "name":"java.lang.Long",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Module"
},
{
  "name":"java.lang.Number",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.lang.Object[]"
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.StackWalker$Option",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"java.lang.String"
},
{
  "name":"java.lang.StringConcatHelper",
  "methods":[{"name":"mix","parameterTypes":["long","int"] }, {"name":"mix","parameterTypes":["long","java.lang.String"] }, {"name":"newArray","parameterTypes":["long"] }, {"name":"newArrayWithSuffix","parameterTypes":["java.lang.String","long"] }, {"name":"newString","parameterTypes":["byte[]","long"] }, {"name":"prepend","parameterTypes":["long","byte[]","int","java.lang.String"] }, {"name":"prepend","parameterTypes":["long","byte[]","java.lang.String","java.lang.String"] }, {"name":"simpleConcat","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"stringOf","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"java.lang.String[]"
},
{
  "name":"java.lang.System",
  "methods":[{"name":"console","parameterTypes":[] }]
},
{
  "name":"java.lang.System$Logger$Level",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"inheritableThreadLocals"}, {"name":"inheritedAccessControlContext"}, {"name":"threadLocalRandomProbe"}, {"name":"threadLocalRandomSecondarySeed"}, {"name":"threadLocalRandomSeed"}, {"name":"threadLocals"}]
},
{
  "name":"java.lang.Thread$ThreadNumbering",
  "fields":[{"name":"next"}]
},
{
  "name":"java.lang.Void"
},
{
  "name":"java.lang.annotation.Annotation"
},
{
  "name":"java.lang.annotation.Annotation[]"
},
{
  "name":"java.lang.annotation.Documented",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"java.lang.annotation.ElementType",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"java.lang.annotation.Inherited",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"java.lang.annotation.Repeatable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"java.lang.annotation.RetentionPolicy",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"java.lang.constant.Constable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.constant.ConstantDesc",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.instrument.Instrumentation",
  "methods":[{"name":"redefineModule","parameterTypes":["java.lang.Module","java.util.Set","java.util.Map","java.util.Map","java.util.Set","java.util.Map"] }]
},
{
  "name":"java.lang.invoke.BoundMethodHandle$Species_LJ",
  "fields":[{"name":"argJ1"}, {"name":"argL0"}],
  "methods":[{"name":"make","parameterTypes":["java.lang.invoke.MethodType","java.lang.invoke.LambdaForm","java.lang.Object","long"] }]
},
{
  "name":"java.lang.invoke.BoundMethodHandle$Species_LL",
  "fields":[{"name":"argL0"}, {"name":"argL1"}],
  "methods":[{"name":"make","parameterTypes":["java.lang.invoke.MethodType","java.lang.invoke.LambdaForm","java.lang.Object","java.lang.Object"] }]
},
{
  "name":"java.lang.invoke.BoundMethodHandle$Species_LLJ",
  "fields":[{"name":"argJ2"}, {"name":"argL0"}, {"name":"argL1"}],
  "methods":[{"name":"make","parameterTypes":["java.lang.invoke.MethodType","java.lang.invoke.LambdaForm","java.lang.Object","java.lang.Object","long"] }]
},
{
  "name":"java.lang.invoke.BoundMethodHandle$Species_LLL",
  "fields":[{"name":"argL0"}, {"name":"argL1"}, {"name":"argL2"}],
  "methods":[{"name":"make","parameterTypes":["java.lang.invoke.MethodType","java.lang.invoke.LambdaForm","java.lang.Object","java.lang.Object","java.lang.Object"] }]
},
{
  "name":"java.lang.invoke.BoundMethodHandle$Species_LLLL",
  "fields":[{"name":"argL0"}, {"name":"argL1"}, {"name":"argL2"}, {"name":"argL3"}],
  "methods":[{"name":"make","parameterTypes":["java.lang.invoke.MethodType","java.lang.invoke.LambdaForm","java.lang.Object","java.lang.Object","java.lang.Object","java.lang.Object"] }]
},
{
  "name":"java.lang.invoke.BoundMethodHandle$Species_LLLLL",
  "fields":[{"name":"argL0"}, {"name":"argL1"}, {"name":"argL2"}, {"name":"argL3"}, {"name":"argL4"}],
  "methods":[{"name":"make","parameterTypes":["java.lang.invoke.MethodType","java.lang.invoke.LambdaForm","java.lang.Object","java.lang.Object","java.lang.Object","java.lang.Object","java.lang.Object"] }]
},
{
  "name":"java.lang.invoke.MethodHandle"
},
{
  "name":"java.lang.invoke.MethodHandleImpl",
  "methods":[{"name":"checkSpreadArgument","parameterTypes":["java.lang.Object","int"] }]
},
{
  "name":"java.lang.invoke.MethodHandleImpl$ArrayAccessor",
  "methods":[{"name":"getElementL","parameterTypes":["java.lang.Object[]","int"] }, {"name":"lengthL","parameterTypes":["java.lang.Object[]"] }, {"name":"setElementL","parameterTypes":["java.lang.Object[]","int","java.lang.Object"] }]
},
{
  "name":"java.lang.invoke.MethodHandleImpl$BindCaller",
  "methods":[{"name":"checkCallerClass","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[{"name":"lookup","parameterTypes":[] }, {"name":"lookup","parameterTypes":["java.lang.Class"] }, {"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods":[{"name":"defineClass","parameterTypes":["byte[]"] }]
},
{
  "name":"java.lang.invoke.VarHandle",
  "fields":[{"name":"vform"}]
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[{"name":"getInputArguments","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AccessibleObject",
  "fields":[{"name":"override"}]
},
{
  "name":"java.lang.reflect.Array",
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.Class","int"] }]
},
{
  "name":"java.math.BigDecimal",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.Inet6Address",
  "fields":[{"name":"holder6"}]
},
{
  "name":"java.net.InetAddress",
  "fields":[{"name":"holder"}]
},
{
  "name":"java.net.InetSocketAddress",
  "fields":[{"name":"holder"}]
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.Socket",
  "fields":[{"name":"in"}, {"name":"out"}, {"name":"state"}]
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URI"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.net.UnknownHostException",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "fields":[{"name":"hb"}, {"name":"offset"}],
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.channels.SelectionKey",
  "fields":[{"name":"attachment"}]
},
{
  "name":"java.nio.channels.spi.AbstractSelectionKey",
  "fields":[{"name":"invalid"}]
},
{
  "name":"java.nio.channels.spi.AbstractSelector",
  "fields":[{"name":"closed"}]
},
{
  "name":"java.nio.file.FileVisitOption",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"java.nio.file.Path"
},
{
  "name":"java.nio.file.Paths",
  "methods":[{"name":"get","parameterTypes":["java.lang.String","java.lang.String[]"] }]
},
{
  "name":"java.nio.file.attribute.PosixFilePermission",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.CryptoPrimitive",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.MessageDigestSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.security.cert.Certificate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.security.cert.PKIXRevocationChecker"
},
{
  "name":"java.security.interfaces.ECPrivateKey"
},
{
  "name":"java.security.interfaces.ECPublicKey"
},
{
  "name":"java.security.interfaces.RSAPrivateKey"
},
{
  "name":"java.security.interfaces.RSAPublicKey"
},
{
  "name":"java.sql.Connection"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Driver"
},
{
  "name":"java.sql.DriverManager",
  "methods":[{"name":"getConnection","parameterTypes":["java.lang.String"] }, {"name":"getDriver","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.sql.Time",
  "methods":[{"name":"<init>","parameterTypes":["long"] }]
},
{
  "name":"java.sql.Timestamp",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.time.DayOfWeek",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.time.Duration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.time.Instant",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.time.LocalDate",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.LocalDateTime",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.time.LocalTime",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.time.Month",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.time.MonthDay",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.OffsetDateTime",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.time.OffsetTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.Period",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.Year",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.YearMonth",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.ZoneId",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.time.ZoneOffset",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.time.ZoneOffset[]"
},
{
  "name":"java.time.ZonedDateTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.chrono.ChronoLocalDateTime",
  "allDeclaredMethods":true
},
{
  "name":"java.time.temporal.ChronoUnit"
},
{
  "name":"java.time.temporal.Temporal",
  "allDeclaredMethods":true
},
{
  "name":"java.time.temporal.TemporalAccessor",
  "allDeclaredMethods":true
},
{
  "name":"java.time.temporal.TemporalAdjuster",
  "allDeclaredMethods":true
},
{
  "name":"java.time.temporal.TemporalAmount",
  "allDeclaredMethods":true
},
{
  "name":"java.time.temporal.TemporalUnit"
},
{
  "name":"java.time.zone.ZoneOffsetTransition",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.time.zone.ZoneOffsetTransitionRule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.time.zone.ZoneOffsetTransitionRule$TimeDefinition",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.time.zone.ZoneOffsetTransitionRule[]"
},
{
  "name":"java.time.zone.ZoneRules",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.AbstractCollection",
  "methods":[{"name":"readResolve","parameterTypes":[] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.AbstractList"
},
{
  "name":"java.util.AbstractMap"
},
{
  "name":"java.util.AbstractQueue",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.AbstractSet",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.Collection"
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.HashMap"
},
{
  "name":"java.util.HashSet",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.ImmutableCollections$AbstractImmutableCollection"
},
{
  "name":"java.util.ImmutableCollections$AbstractImmutableList"
},
{
  "name":"java.util.ImmutableCollections$AbstractImmutableMap"
},
{
  "name":"java.util.ImmutableCollections$Access"
},
{
  "name":"java.util.LinkedHashSet",
  "allDeclaredFields":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.List"
},
{
  "name":"java.util.Locale",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.Locale$Category"
},
{
  "name":"java.util.Locale$FilteringMode"
},
{
  "name":"java.util.Locale$IsoCountryCode"
},
{
  "name":"java.util.Locale$LanguageRange"
},
{
  "name":"java.util.Locale[]"
},
{
  "name":"java.util.Map"
},
{
  "name":"java.util.PropertyPermission"
},
{
  "name":"java.util.Random",
  "fields":[{"name":"seed"}]
},
{
  "name":"java.util.RandomAccess"
},
{
  "name":"java.util.SequencedCollection"
},
{
  "name":"java.util.SequencedMap"
},
{
  "name":"java.util.concurrent.ArrayBlockingQueue",
  "allDeclaredFields":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.CompletableFuture",
  "fields":[{"name":"result"}, {"name":"stack"}]
},
{
  "name":"java.util.concurrent.CompletableFuture$Completion",
  "fields":[{"name":"next"}]
},
{
  "name":"java.util.concurrent.ConcurrentHashMap$TreeBin",
  "fields":[{"name":"lockState"}, {"name":"waiter"}]
},
{
  "name":"java.util.concurrent.ConcurrentLinkedDeque",
  "fields":[{"name":"head"}, {"name":"tail"}]
},
{
  "name":"java.util.concurrent.ConcurrentLinkedDeque$Node",
  "fields":[{"name":"item"}, {"name":"next"}, {"name":"prev"}]
},
{
  "name":"java.util.concurrent.ConcurrentLinkedQueue",
  "fields":[{"name":"head"}, {"name":"tail"}]
},
{
  "name":"java.util.concurrent.ConcurrentLinkedQueue$Node",
  "fields":[{"name":"item"}, {"name":"next"}]
},
{
  "name":"java.util.concurrent.ConcurrentSkipListMap",
  "fields":[{"name":"adder"}, {"name":"head"}]
},
{
  "name":"java.util.concurrent.ConcurrentSkipListMap$Index",
  "fields":[{"name":"right"}]
},
{
  "name":"java.util.concurrent.ConcurrentSkipListMap$Node",
  "fields":[{"name":"next"}, {"name":"val"}]
},
{
  "name":"java.util.concurrent.ExecutorService"
},
{
  "name":"java.util.concurrent.ForkJoinPool",
  "fields":[{"name":"ctl"}, {"name":"parallelism"}, {"name":"poolIds"}, {"name":"runState"}, {"name":"threadIds"}]
},
{
  "name":"java.util.concurrent.ForkJoinPool$WorkQueue",
  "fields":[{"name":"access"}, {"name":"phase"}]
},
{
  "name":"java.util.concurrent.ForkJoinTask",
  "fields":[{"name":"aux"}, {"name":"status"}]
},
{
  "name":"java.util.concurrent.FutureTask",
  "fields":[{"name":"runner"}, {"name":"state"}, {"name":"waiters"}]
},
{
  "name":"java.util.concurrent.LinkedTransferQueue",
  "fields":[{"name":"head"}, {"name":"sweepVotes"}, {"name":"tail"}],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.ScheduledExecutorService"
},
{
  "name":"java.util.concurrent.ScheduledThreadPoolExecutor"
},
{
  "name":"java.util.concurrent.ThreadPoolExecutor"
},
{
  "name":"java.util.concurrent.TimeUnit",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.concurrent.locks.AbstractOwnableSynchronizer",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.locks.AbstractQueuedSynchronizer",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject",
  "allDeclaredFields":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.locks.ReentrantLock",
  "allDeclaredFields":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.locks.ReentrantLock$NonfairSync",
  "allDeclaredFields":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.locks.ReentrantLock$Sync",
  "allDeclaredFields":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"java.util.function.Supplier"
},
{
  "name":"java.util.stream.Stream"
},
{
  "name":"javax.activation.DataSource"
},
{
  "name":"javax.annotation.Nonnull",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.annotation.Nullable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.annotation.PreDestroy",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.annotation.Priority",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.annotation.meta.TypeQualifier"
},
{
  "name":"javax.annotation.meta.When",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"javax.inject.Inject",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.inject.Named",
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"javax.inject.Provider"
},
{
  "name":"javax.inject.Qualifier",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.inject.Scope",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.inject.Singleton",
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.naming.InitialContext",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"lookup","parameterTypes":["java.lang.String"] }]
},
{
  "name":"javax.net.ssl.SSLContext",
  "fields":[{"name":"defaultContext"}]
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"javax.ws.rs.ConstrainedTo",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.ws.rs.Consumes",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.ws.rs.Produces",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.ws.rs.RuntimeType",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"javax.ws.rs.client.Entity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getAnnotations","parameterTypes":[] }, {"name":"getEncoding","parameterTypes":[] }, {"name":"getEntity","parameterTypes":[] }, {"name":"getLanguage","parameterTypes":[] }, {"name":"getMediaType","parameterTypes":[] }, {"name":"getVariant","parameterTypes":[] }]
},
{
  "name":"javax.ws.rs.core.CacheControl"
},
{
  "name":"javax.ws.rs.core.Configurable"
},
{
  "name":"javax.ws.rs.core.Context",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.ws.rs.core.Cookie"
},
{
  "name":"javax.ws.rs.core.EntityTag"
},
{
  "name":"javax.ws.rs.core.Form"
},
{
  "name":"javax.ws.rs.core.GenericType"
},
{
  "name":"javax.ws.rs.core.Link"
},
{
  "name":"javax.ws.rs.core.MediaType",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getParameters","parameterTypes":[] }, {"name":"getSubtype","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }, {"name":"isWildcardSubtype","parameterTypes":[] }, {"name":"isWildcardType","parameterTypes":[] }]
},
{
  "name":"javax.ws.rs.core.MediaType[]"
},
{
  "name":"javax.ws.rs.core.MultivaluedMap"
},
{
  "name":"javax.ws.rs.core.NewCookie"
},
{
  "name":"javax.ws.rs.core.StreamingOutput"
},
{
  "name":"javax.ws.rs.core.Variant",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getEncoding","parameterTypes":[] }, {"name":"getLanguage","parameterTypes":[] }, {"name":"getLanguageString","parameterTypes":[] }, {"name":"getMediaType","parameterTypes":[] }]
},
{
  "name":"javax.ws.rs.ext.ContextResolver"
},
{
  "name":"javax.ws.rs.ext.MessageBodyReader"
},
{
  "name":"javax.ws.rs.ext.MessageBodyWriter"
},
{
  "name":"javax.ws.rs.ext.Provider",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate"
},
{
  "name":"javax.xml.parsers.DocumentBuilderFactory"
},
{
  "name":"javax.xml.parsers.SAXParserFactory"
},
{
  "name":"javax.xml.transform.Source"
},
{
  "name":"javax.xml.transform.TransformerFactory"
},
{
  "name":"javax.xml.transform.dom.DOMSource"
},
{
  "name":"javax.xml.transform.sax.SAXSource"
},
{
  "name":"javax.xml.transform.stream.StreamSource"
},
{
  "name":"jdk.internal.ValueBased",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jdk.internal.org.jline.JdkConsoleProviderImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.CallerSensitive",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor10",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor14",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor16",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor18",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor2",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor20",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor22",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor24",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor26",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor28",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor4",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor6",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.reflect.GeneratedSerializationConstructorAccessor8",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.internal.util.OperatingSystem",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"jdk.internal.vm.SharedThreadContainer",
  "fields":[{"name":"closed"}, {"name":"virtualThreads"}]
},
{
  "name":"jdk.internal.vm.annotation.ForceInline",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"jdk.internal.vm.annotation.IntrinsicCandidate",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"jdk.internal.vm.annotation.Stable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"jdk.jshell.execution.impl.ConsoleImpl$ConsoleProviderImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.internal.FlightRecorderMXBeanProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"jdk.nashorn.api.scripting.NashornScriptEngineFactory"
},
{
  "name":"jdk.net.ExtendedSocketOptions"
},
{
  "name":"jdk.net.MacOSXSocketOptions",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"long[]"
},
{
  "name":"net.javacrumbs.jsonunit.core.Option",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.apache.johnzon.mapper.Mapper"
},
{
  "name":"org.apiguardian.api.API"
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.hk2.api.AnnotationLiteral"
},
{
  "name":"org.glassfish.hk2.api.Context"
},
{
  "name":"org.glassfish.hk2.api.ContractIndicator",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.glassfish.hk2.api.DescriptorVisibility",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.glassfish.hk2.api.Factory"
},
{
  "name":"org.glassfish.hk2.api.InjectionResolver"
},
{
  "name":"org.glassfish.hk2.api.PerThread"
},
{
  "name":"org.glassfish.hk2.api.TypeLiteral"
},
{
  "name":"org.glassfish.hk2.api.Unproxiable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.glassfish.hk2.api.Visibility",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.glassfish.hk2.internal.PerThreadContext",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.glassfish.hk2.utilities.binding.AbstractBindingBuilder"
},
{
  "name":"org.glassfish.hk2.utilities.binding.BindingBuilder"
},
{
  "name":"org.glassfish.hk2.utilities.binding.NamedBindingBuilder"
},
{
  "name":"org.glassfish.hk2.utilities.binding.ScopedBindingBuilder"
},
{
  "name":"org.glassfish.hk2.utilities.binding.ScopedNamedBindingBuilder"
},
{
  "name":"org.glassfish.hk2.utilities.binding.ServiceBindingBuilder"
},
{
  "name":"org.glassfish.jersey.ExtendedConfig"
},
{
  "name":"org.glassfish.jersey.client.ChunkedInput"
},
{
  "name":"org.glassfish.jersey.client.ChunkedInputReader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.client.ClientAsyncExecutor",
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.glassfish.jersey.client.ClientBackgroundScheduler",
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.glassfish.jersey.client.ClientConfig"
},
{
  "name":"org.glassfish.jersey.client.ClientConfig$State"
},
{
  "name":"org.glassfish.jersey.client.ClientRequest"
},
{
  "name":"org.glassfish.jersey.client.DefaultClientAsyncExecutorProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.client.DefaultClientBackgroundSchedulerProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.client.JerseyClientBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.ContextInjectionResolverImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.Hk2InjectionManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.Hk2RequestScope",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.InstanceSupplierFactoryBridge",
  "methods":[{"name":"provide","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.JerseyClassAnalyzer$$InjectedInvoker/0x0000007001518400",
  "methods":[{"name":"invoke_V","parameterTypes":["java.lang.invoke.MethodHandle","java.lang.Object[]"] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.JerseyErrorService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.inject.hk2.RequestContext",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.jersey.process.internal.RequestScope"] }]
},
{
  "name":"org.glassfish.jersey.internal.JaxrsProviders",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.internal.PropertiesDelegate"
},
{
  "name":"org.glassfish.jersey.internal.RuntimeDelegateImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.internal.inject.AnnotationLiteral"
},
{
  "name":"org.glassfish.jersey.internal.inject.AnnotationLiteral$$InjectedInvoker/0x0000007001520000",
  "methods":[{"name":"invoke_V","parameterTypes":["java.lang.invoke.MethodHandle","java.lang.Object[]"] }]
},
{
  "name":"org.glassfish.jersey.internal.inject.Custom",
  "allDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.internal.inject.DisposableSupplier"
},
{
  "name":"org.glassfish.jersey.internal.inject.InjectionResolver"
},
{
  "name":"org.glassfish.jersey.internal.util.collection.ConcurrentHashMapV8",
  "fields":[{"name":"baseCount"}, {"name":"cellsBusy"}, {"name":"sizeCtl"}, {"name":"transferIndex"}, {"name":"transferOrigin"}]
},
{
  "name":"org.glassfish.jersey.internal.util.collection.ConcurrentHashMapV8$CounterCell",
  "fields":[{"name":"value"}]
},
{
  "name":"org.glassfish.jersey.internal.util.collection.Ref"
},
{
  "name":"org.glassfish.jersey.jackson.JacksonFeature",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.jackson.internal.JacksonAutoDiscoverable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JacksonJaxbJsonProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JacksonJsonProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.media.multipart.MultiPart"
},
{
  "name":"org.glassfish.jersey.media.multipart.MultiPartFeature",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.media.multipart.internal.MultiPartReaderClientSide",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.ws.rs.ext.Providers"] }]
},
{
  "name":"org.glassfish.jersey.media.multipart.internal.MultiPartWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.ws.rs.ext.Providers"] }]
},
{
  "name":"org.glassfish.jersey.message.MessageBodyWorkers"
},
{
  "name":"org.glassfish.jersey.message.internal.AbstractFormProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.message.internal.AbstractMessageReaderWriterProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.message.internal.BasicTypesMessageProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.ByteArrayProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.DataSourceProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.FileProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.FormMultivaluedMapProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.FormProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.InputStreamProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.ReaderProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.RenderedImageProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$DomSourceReader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.inject.Provider"] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$SaxSourceReader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.inject.Provider"] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$SourceWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.inject.Provider","javax.inject.Provider"] }]
},
{
  "name":"org.glassfish.jersey.message.internal.SourceProvider$StreamSourceReader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.StreamingOutputProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.message.internal.StringMessageProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.process.internal.RequestScope",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.process.internal.RequestScoped"
},
{
  "name":"org.glassfish.jersey.spi.AbstractThreadPoolProvider",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.glassfish.jersey.spi.ContextResolvers"
},
{
  "name":"org.glassfish.jersey.spi.Contract",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.glassfish.jersey.spi.ExceptionMappers"
},
{
  "name":"org.glassfish.jersey.spi.ExecutorServiceProvider"
},
{
  "name":"org.glassfish.jersey.spi.HeaderDelegateProvider"
},
{
  "name":"org.glassfish.jersey.spi.ScheduledExecutorServiceProvider"
},
{
  "name":"org.glassfish.jersey.spi.ScheduledThreadPoolExecutorProvider",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"preDestroy","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jersey.spi.ThreadPoolExecutorProvider",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"preDestroy","parameterTypes":[] }]
},
{
  "name":"org.gradle.api.internal.file.temp.GradleUserHomeTemporaryFileProvider",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.gradle.api.internal.tasks.testing.TestClassProcessor",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }, {"name":"processTestClass","parameterTypes":["org.gradle.api.internal.tasks.testing.TestClassRunInfo"] }, {"name":"startProcessing","parameterTypes":["org.gradle.api.internal.tasks.testing.TestResultProcessor"] }, {"name":"stop","parameterTypes":[] }]
},
{
  "name":"org.gradle.api.internal.tasks.testing.TestClassRunInfo"
},
{
  "name":"org.gradle.api.internal.tasks.testing.TestResultProcessor",
  "methods":[{"name":"completed","parameterTypes":["java.lang.Object","org.gradle.api.internal.tasks.testing.TestCompleteEvent"] }, {"name":"started","parameterTypes":["org.gradle.api.internal.tasks.testing.TestDescriptorInternal","org.gradle.api.internal.tasks.testing.TestStartEvent"] }]
},
{
  "name":"org.gradle.api.internal.tasks.testing.filter.TestFilterSpec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformSpec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor",
  "methods":[{"name":"<init>","parameterTypes":["org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformSpec","org.gradle.internal.id.IdGenerator","org.gradle.internal.actor.ActorFactory","org.gradle.internal.time.Clock"] }]
},
{
  "name":"org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessorFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"org.gradle.api.internal.tasks.testing.worker.RemoteTestClassProcessor",
  "methods":[{"name":"processTestClass","parameterTypes":["org.gradle.api.internal.tasks.testing.TestClassRunInfo"] }, {"name":"startProcessing","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }]
},
{
  "name":"org.gradle.api.internal.tasks.testing.worker.TestWorker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"org.gradle.api.internal.tasks.testing.worker.TestWorker$State",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.gradle.api.internal.tasks.testing.worker.TestWorker$TestFrameworkServiceRegistry",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createActorFactory","parameterTypes":["org.gradle.internal.concurrent.ExecutorFactory"] }, {"name":"createClock","parameterTypes":[] }, {"name":"createExecutorFactory","parameterTypes":[] }, {"name":"createIdGenerator","parameterTypes":[] }]
},
{
  "name":"org.gradle.internal.Factory"
},
{
  "name":"org.gradle.internal.file.StatStatistics$Collector",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.gradle.internal.id.IdGenerator"
},
{
  "name":"org.gradle.internal.logging.LoggingManagerInternal"
},
{
  "name":"org.gradle.internal.logging.events.OutputEventListener",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.gradle.internal.logging.services.LoggingServiceRegistry",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createLoggingManagerFactory","parameterTypes":["org.gradle.internal.time.Clock"] }, {"name":"createTimeProvider","parameterTypes":[] }]
},
{
  "name":"org.gradle.internal.logging.services.LoggingServiceRegistry$CommandLineLogging",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.gradle.internal.nativeintegration.filesystem.services.FileSystemServices",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configure","parameterTypes":["org.gradle.internal.service.ServiceRegistration"] }]
},
{
  "name":"org.gradle.internal.nativeintegration.filesystem.services.GenericFileSystem$Factory",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.gradle.internal.nativeintegration.services.NativeServices",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createNativeCapabilities","parameterTypes":[] }, {"name":"createSystemInfo","parameterTypes":["org.gradle.internal.os.OperatingSystem"] }]
},
{
  "name":"org.gradle.internal.nativeintegration.services.NativeServices$1",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configure","parameterTypes":["org.gradle.internal.service.ServiceRegistration"] }]
},
{
  "name":"org.gradle.internal.nativeintegration.services.NativeServices$NativeFeatures",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.gradle.internal.remote.services.MessagingServices",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createMessagingClient","parameterTypes":["org.gradle.internal.remote.internal.OutgoingConnector","org.gradle.internal.concurrent.ExecutorFactory"] }, {"name":"createOutgoingConnector","parameterTypes":[] }]
},
{
  "name":"org.gradle.internal.service.MethodHandleBasedServiceMethodFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.gradle.internal.service.Provides",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker",
  "methods":[{"name":"<init>","parameterTypes":["java.io.DataInputStream"] }]
},
{
  "name":"org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker$2",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configure","parameterTypes":["org.gradle.internal.service.ServiceRegistration"] }]
},
{
  "name":"org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker$WorkerServices",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createGradleUserHomeDirProvider","parameterTypes":[] }, {"name":"createWorkerDirectoryProvider","parameterTypes":["org.gradle.initialization.GradleUserHomeDirProvider"] }, {"name":"createWorkerLogEventListener","parameterTypes":[] }]
},
{
  "name":"org.jacoco.agent.rt.internal_aeaf9ab.PreMain",
  "methods":[{"name":"premain","parameterTypes":["java.lang.String","java.lang.instrument.Instrumentation"] }]
},
{
  "name":"org.jacoco.agent.rt.internal_aeaf9ab.core.runtime.AgentOptions$OutputMode",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.jacoco.agent.rt.internal_aeaf9ab.core.runtime.InjectedClassRuntime",
  "allDeclaredClasses":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","java.lang.String"] }]
},
{
  "name":"org.jacoco.agent.rt.internal_aeaf9ab.core.runtime.InjectedClassRuntime$Lookup",
  "allDeclaredClasses":true
},
{
  "name":"org.jcp.xml.dsig.internal.dom.XMLDSigRI",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.json.JSONObject"
},
{
  "name":"org.junit.jupiter.api.BeforeEach",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.junit.jupiter.api.Tags"
},
{
  "name":"org.junit.jupiter.api.Test",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.junit.jupiter.api.TestTemplate",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.junit.jupiter.api.extension.ExtendWith",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.junit.jupiter.api.extension.ExtensionContext"
},
{
  "name":"org.junit.jupiter.api.extension.Extensions"
},
{
  "name":"org.junit.jupiter.api.io.CleanupMode",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.junit.jupiter.api.io.TempDir",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.junit.jupiter.api.io.TempDirFactory"
},
{
  "name":"org.junit.jupiter.api.parallel.ResourceLocks"
},
{
  "name":"org.junit.jupiter.engine.JupiterTestEngine",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.junit.jupiter.params.ParameterizedTest",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.junit.jupiter.params.ParameterizedTestExtension",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.junit.jupiter.params.provider.ArgumentsSource",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.junit.jupiter.params.provider.ArgumentsSources"
},
{
  "name":"org.junit.jupiter.params.provider.CsvArgumentsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.junit.jupiter.params.provider.CsvSource",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.junit.jupiter.params.provider.EnumArgumentsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.junit.jupiter.params.provider.EnumSource",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.junit.jupiter.params.provider.EnumSource$Mode",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.junit.jupiter.params.provider.NullEnum"
},
{
  "name":"org.junit.platform.commons.annotation.Testable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.junit.platform.engine.TestSource"
},
{
  "name":"org.junit.platform.engine.support.descriptor.ClassSource"
},
{
  "name":"org.junit.platform.engine.support.descriptor.MethodSource"
},
{
  "name":"org.junit.platform.launcher.LauncherSession"
},
{
  "name":"org.junit.platform.launcher.TestIdentifier"
},
{
  "name":"org.junit.platform.launcher.TestIdentifier$SerializedForm",
  "allDeclaredFields":true,
  "methods":[{"name":"readObject","parameterTypes":["java.io.ObjectInputStream"] }, {"name":"readObjectNoData","parameterTypes":[] }, {"name":"readResolve","parameterTypes":[] }, {"name":"writeObject","parameterTypes":["java.io.ObjectOutputStream"] }, {"name":"writeReplace","parameterTypes":[] }]
},
{
  "name":"org.junit.platform.launcher.TestPlan"
},
{
  "name":"org.junit.platform.launcher.listeners.UniqueIdTrackingListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.junit.platform.reporting.open.xml.OpenTestReportGeneratingListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jvnet.hk2.annotations.Contract",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"org.jvnet.hk2.external.generator.ServiceLocatorGeneratorImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jvnet.hk2.internal.DynamicConfigurationServiceImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.hk2.api.ServiceLocator"] }]
},
{
  "name":"org.jvnet.hk2.internal.ServiceLocatorRuntimeImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.hk2.api.ServiceLocator"] }]
},
{
  "name":"org.mockserver.codec.MockServerHttpClientCodec"
},
{
  "name":"org.mockserver.codec.MockServerHttpServerCodec"
},
{
  "name":"org.mockserver.dashboard.DashboardWebSocketHandler",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"org.mockserver.httpclient.HttpClientConnectionErrorHandler",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"org.mockserver.httpclient.HttpClientHandler",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"org.mockserver.httpclient.HttpClientInitializer"
},
{
  "name":"org.mockserver.junit.jupiter.MockServerExtension",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockserver.matchers.TimeToLive"
},
{
  "name":"org.mockserver.matchers.Times"
},
{
  "name":"org.mockserver.mock.Expectation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getHttpError","parameterTypes":[] }, {"name":"getHttpForward","parameterTypes":[] }, {"name":"getHttpForwardClassCallback","parameterTypes":[] }, {"name":"getHttpForwardObjectCallback","parameterTypes":[] }, {"name":"getHttpForwardTemplate","parameterTypes":[] }, {"name":"getHttpOverrideForwardedRequest","parameterTypes":[] }, {"name":"getHttpRequest","parameterTypes":[] }, {"name":"getHttpResponse","parameterTypes":[] }, {"name":"getHttpResponseClassCallback","parameterTypes":[] }, {"name":"getHttpResponseObjectCallback","parameterTypes":[] }, {"name":"getHttpResponseTemplate","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getPriority","parameterTypes":[] }, {"name":"getTimeToLive","parameterTypes":[] }, {"name":"getTimes","parameterTypes":[] }]
},
{
  "name":"org.mockserver.model.Action"
},
{
  "name":"org.mockserver.model.Body"
},
{
  "name":"org.mockserver.model.Body$Type",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.mockserver.model.BodyWithContentType"
},
{
  "name":"org.mockserver.model.ConnectionOptions"
},
{
  "name":"org.mockserver.model.Cookie"
},
{
  "name":"org.mockserver.model.Cookies"
},
{
  "name":"org.mockserver.model.CookiesModifier"
},
{
  "name":"org.mockserver.model.Delay"
},
{
  "name":"org.mockserver.model.ExpectationId",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.model.Header"
},
{
  "name":"org.mockserver.model.Headers"
},
{
  "name":"org.mockserver.model.HeadersModifier"
},
{
  "name":"org.mockserver.model.HttpClassCallback"
},
{
  "name":"org.mockserver.model.HttpError"
},
{
  "name":"org.mockserver.model.HttpForward"
},
{
  "name":"org.mockserver.model.HttpForward$Scheme",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.mockserver.model.HttpMessage"
},
{
  "name":"org.mockserver.model.HttpObjectCallback"
},
{
  "name":"org.mockserver.model.HttpOverrideForwardedRequest"
},
{
  "name":"org.mockserver.model.HttpRequest"
},
{
  "name":"org.mockserver.model.HttpRequestModifier"
},
{
  "name":"org.mockserver.model.HttpResponse"
},
{
  "name":"org.mockserver.model.HttpResponseModifier"
},
{
  "name":"org.mockserver.model.HttpTemplate"
},
{
  "name":"org.mockserver.model.HttpTemplate$TemplateType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.mockserver.model.KeysAndValues"
},
{
  "name":"org.mockserver.model.KeysAndValuesModifier"
},
{
  "name":"org.mockserver.model.KeysToMultiValues"
},
{
  "name":"org.mockserver.model.KeysToMultiValuesModifier"
},
{
  "name":"org.mockserver.model.MediaType",
  "allDeclaredFields":true
},
{
  "name":"org.mockserver.model.Message"
},
{
  "name":"org.mockserver.model.Not"
},
{
  "name":"org.mockserver.model.NottableString"
},
{
  "name":"org.mockserver.model.ObjectWithJsonToString",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.mockserver.model.ObjectWithReflectiveEqualsHashCodeToString",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.mockserver.model.Parameter"
},
{
  "name":"org.mockserver.model.Parameters"
},
{
  "name":"org.mockserver.model.PathModifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.model.QueryParametersModifier"
},
{
  "name":"org.mockserver.model.RequestDefinition"
},
{
  "name":"org.mockserver.model.SocketAddress",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.model.SocketAddress$Scheme",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"org.mockserver.model.X509Certificate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.netty.HttpRequestHandler",
  "methods":[{"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"org.mockserver.netty.MockServerUnificationInitializer"
},
{
  "name":"org.mockserver.netty.unification.HttpContentLengthRemover"
},
{
  "name":"org.mockserver.netty.unification.PortBinding",
  "allDeclaredFields":true
},
{
  "name":"org.mockserver.netty.unification.PortUnificationHandler",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"org.mockserver.netty.websocketregistry.CallbackWebSocketServerHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"org.mockserver.serialization.Base64Converter",
  "allDeclaredFields":true
},
{
  "name":"org.mockserver.serialization.model.ConnectionOptionsDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.CookiesModifierDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.DTO",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.mockserver.serialization.model.DelayDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.ExpectationDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getHttpError","parameterTypes":[] }, {"name":"getHttpForward","parameterTypes":[] }, {"name":"getHttpForwardClassCallback","parameterTypes":[] }, {"name":"getHttpForwardObjectCallback","parameterTypes":[] }, {"name":"getHttpForwardTemplate","parameterTypes":[] }, {"name":"getHttpOverrideForwardedRequest","parameterTypes":[] }, {"name":"getHttpRequest","parameterTypes":[] }, {"name":"getHttpResponse","parameterTypes":[] }, {"name":"getHttpResponseClassCallback","parameterTypes":[] }, {"name":"getHttpResponseObjectCallback","parameterTypes":[] }, {"name":"getHttpResponseTemplate","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getPriority","parameterTypes":[] }, {"name":"getTimeToLive","parameterTypes":[] }, {"name":"getTimes","parameterTypes":[] }, {"name":"setHttpRequest","parameterTypes":["org.mockserver.serialization.model.RequestDefinitionDTO"] }, {"name":"setHttpResponse","parameterTypes":["org.mockserver.serialization.model.HttpResponseDTO"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setPriority","parameterTypes":["java.lang.Integer"] }, {"name":"setTimeToLive","parameterTypes":["org.mockserver.serialization.model.TimeToLiveDTO"] }, {"name":"setTimes","parameterTypes":["org.mockserver.serialization.model.TimesDTO"] }]
},
{
  "name":"org.mockserver.serialization.model.HeadersModifierDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.HttpClassCallbackDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.HttpErrorDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.HttpForwardDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.HttpObjectCallbackDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.HttpOverrideForwardedRequestDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.HttpRequestDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setMethod","parameterTypes":["org.mockserver.model.NottableString"] }, {"name":"setPath","parameterTypes":["org.mockserver.model.NottableString"] }]
},
{
  "name":"org.mockserver.serialization.model.HttpRequestModifierDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.HttpResponseDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setBody","parameterTypes":["org.mockserver.serialization.model.BodyWithContentTypeDTO"] }, {"name":"setHeaders","parameterTypes":["org.mockserver.model.Headers"] }, {"name":"setStatusCode","parameterTypes":["java.lang.Integer"] }]
},
{
  "name":"org.mockserver.serialization.model.HttpResponseModifierDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.HttpTemplateDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.KeysAndValuesModifierDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.mockserver.serialization.model.KeysToMultiValuesModifierDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.mockserver.serialization.model.NotDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.mockserver.serialization.model.QueryParametersModifierDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockserver.serialization.model.RequestDefinitionDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.mockserver.serialization.model.TimesDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockserver.serialization.model.VerificationDTO",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getExpectationId","parameterTypes":[] }, {"name":"getHttpRequest","parameterTypes":[] }, {"name":"getMaximumNumberOfRequestToReturnInVerificationFailure","parameterTypes":[] }, {"name":"getTimes","parameterTypes":[] }, {"name":"setHttpRequest","parameterTypes":["org.mockserver.serialization.model.HttpRequestDTO"] }, {"name":"setTimes","parameterTypes":["org.mockserver.serialization.model.VerificationTimesDTO"] }]
},
{
  "name":"org.mockserver.verify.Verification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getExpectationId","parameterTypes":[] }, {"name":"getHttpRequest","parameterTypes":[] }, {"name":"getMaximumNumberOfRequestToReturnInVerificationFailure","parameterTypes":[] }, {"name":"getTimes","parameterTypes":[] }]
},
{
  "name":"org.mockserver.verify.VerificationTimes"
},
{
  "name":"org.openapitools.jackson.nullable.JsonNullable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.osgi.framework.BundleReference"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.event.Level",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"picocli.AutoComplete$GenerateCompletion",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"picocli.CommandLine$ArgGroup",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"picocli.CommandLine$AutoHelpMixin",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"picocli.CommandLine$Command",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"picocli.CommandLine$Help$Ansi$Style",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"picocli.CommandLine$Help$Visibility",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"picocli.CommandLine$HelpCommand",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"picocli.CommandLine$Mixin",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"picocli.CommandLine$NoCompletionCandidates"
},
{
  "name":"picocli.CommandLine$NoDefaultProvider"
},
{
  "name":"picocli.CommandLine$NoOpModelTransformer"
},
{
  "name":"picocli.CommandLine$NoOpParameterPreprocessor"
},
{
  "name":"picocli.CommandLine$NoVersionProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"picocli.CommandLine$NullParameterConsumer"
},
{
  "name":"picocli.CommandLine$Option",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"picocli.CommandLine$Parameters",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"picocli.CommandLine$ParentCommand",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"picocli.CommandLine$ScopeType",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"picocli.CommandLine$Spec",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
},
{
  "name":"picocli.CommandLine$Spec$Target",
  "methods":[{"name":"values","parameterTypes":[] }]
},
{
  "name":"sun.invoke.util.ValueConversions",
  "methods":[{"name":"boxBoolean","parameterTypes":["boolean"] }, {"name":"boxInteger","parameterTypes":["int"] }]
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[{"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, {"name":"objectFieldOffset","parameterTypes":["java.lang.reflect.Field"] }, {"name":"putBoolean","parameterTypes":["java.lang.Object","long","boolean"] }]
},
{
  "name":"sun.misc.VM"
},
{
  "name":"sun.net.spi.DefaultProxySelector",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.net.www.protocol.http.Handler",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.net.www.protocol.http.ntlm.NTLMAuthentication",
  "methods":[{"name":"<init>","parameterTypes":["boolean","java.lang.String","int","java.net.PasswordAuthentication"] }, {"name":"<init>","parameterTypes":["boolean","java.net.URL","java.net.PasswordAuthentication"] }, {"name":"isTrustedSite","parameterTypes":["java.net.URL"] }, {"name":"supportsTransparentAuth","parameterTypes":[] }]
},
{
  "name":"sun.nio.ch.SelectionKeyImpl",
  "fields":[{"name":"interestOps"}]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[{"name":"publicSelectedKeys"}, {"name":"selectedKeys"}]
},
{
  "name":"sun.security.ec.SunEC",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.jgss.SunProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs.SignerInfo[]"
},
{
  "name":"sun.security.pkcs11.SunPKCS11",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA224withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA256withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$DualFormatJKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.certpath.PKIXCertPathValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.certpath.ldap.JdkLDAP",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.PSSParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAPSSSignature",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA224withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA512withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.smartcardio.SunPCSC",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.KeyManagerFactoryImpl$SunX509",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$DefaultSSLContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.util.ObjectIdentifier"
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificateExtensions"
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.text.resources.BreakIteratorInfo",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.text.resources.BreakIteratorResources",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.text.resources.cldr.FormatData",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.text.resources.cldr.FormatData_en",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.text.resources.cldr.ext.FormatData_en_001",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.text.resources.cldr.ext.FormatData_en_GB",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.util.cldr.CLDRLocaleProviderAdapter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.util.locale.provider.JRELocaleProviderAdapter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.util.logging.internal.LoggingProviderImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.util.resources.TimeZoneNames",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.util.resources.TimeZoneNames_en",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.util.resources.cldr.CalendarData",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.util.resources.cldr.TimeZoneNames",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.util.resources.cldr.TimeZoneNames_en",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.util.resources.cldr.provider.CLDRLocaleDataMetaInfo",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.util.resources.provider.LocaleDataProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.util.resources.provider.NonBaseLocaleDataMetaInfo",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"worker.org.gradle.process.internal.worker.GradleWorkerMain",
  "methods":[{"name":"main","parameterTypes":["java.lang.String[]"] }]
}
]
