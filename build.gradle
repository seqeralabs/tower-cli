plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'org.graalvm.buildtools.native'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/seqeralabs/tower-java-sdk")
        credentials {
            username = System.getenv("GITHUB_USERNAME")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    implementation 'javax.activation:activation:1.1.1'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-core:1.2.11'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'io.seqera.tower:tower-java-sdk:1.3.0'
    implementation 'info.picocli:picocli:4.6.3'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.3'

    testImplementation 'org.mock-server:mockserver-client-java:5.13.0'
    testImplementation 'org.mock-server:mockserver-netty:5.13.0'
    testImplementation 'org.mock-server:mockserver-junit-jupiter:5.13.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

}

license {
    header = project.file('HEADER.txt')
    properties {
        name = 'Seqera Labs'
        year = 2021
    }
    exclude '**/*.properties'
    exclude 'gradlew'
    exclude 'conf/**'
}

task buildInfo {
    doLast {
        def version = rootProject.file('VERSION').text.trim()
        def versionApi = rootProject.file('VERSION-API').text.trim()
        def commitId = System.env.getOrDefault("GITHUB_SHA", "unknown").substring(0,7)
        def platform = System.env.getOrDefault("PLATFORM", "java")
        def info = """\
                    version=${version}
                    versionApi=${versionApi}
                    commitId=${commitId}
                    platform=${platform}
                """.stripIndent().toString()
        def f = file("src/main/resources/META-INF/build-info.properties")
        f.parentFile.mkdirs()
        f.text = info
    }
}

compileJava {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
    options.compilerArgs += ["-Aproject=${project.name}"]
    dependsOn buildInfo
}

application {
    mainClass.set('io.seqera.tower.cli.Tower')
    applicationDefaultJvmArgs = ["-agentlib:native-image-agent=config-merge-dir=conf/"]
}

shadowJar {
    archiveBaseName.set('tw')
    archiveClassifier.set('')
    archiveVersion.set('')
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
    dependsOn checkLicenses
}

graalvmNative {
    binaries {
        main {
            imageName = 'tw'
            mainClass = 'io.seqera.tower.cli.Tower'
            configurationFileDirectories.from(file('conf'))

            if (System.env.getOrDefault("PLATFORM", "") == "linux-x86_64") {
                buildArgs(['--static', '--libc=musl'])
            }
            buildArgs.add('--allow-incomplete-classpath')
            buildArgs.add('--report-unsupported-elements-at-runtime')
            buildArgs.add('-H:+AddAllCharsets')
            buildArgs.add('-H:EnableURLProtocols=https,http')
            buildArgs.add('-H:+ReportExceptionStackTraces')

        }

        test {
            verbose = true
            agent = false
        }
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
